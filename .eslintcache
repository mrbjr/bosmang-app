[{"C:\\Users\\mrbjr\\Documents\\app\\src\\App.js":"1","C:\\Users\\mrbjr\\Documents\\app\\src\\index.js":"2","c:\\Users\\mrbjr\\Documents\\app\\src\\index.js":"3","C:\\Users\\mrbjr\\Documents\\app\\src\\scripts.js":"4","C:\\Users\\mrbjr\\Documents\\app\\src\\functions.js":"5","C:\\Users\\mrbjr\\Documents\\app\\src\\LoginFormApp.js":"6","C:\\Users\\mrbjr\\Documents\\app\\src\\LogoutApp.js":"7","C:\\Users\\mrbjr\\Documents\\app\\src\\MaterialsApp.js":"8","C:\\Users\\mrbjr\\Documents\\app\\src\\AppsListApp.js":"9","C:\\Users\\mrbjr\\Documents\\app\\src\\AppDisplay.js":"10","C:\\Users\\mrbjr\\Documents\\app\\src\\ElementsApp.js":"11","C:\\Users\\mrbjr\\Documents\\app\\src\\AppElements\\ElementFormConstruc.js":"12","C:\\Users\\mrbjr\\Documents\\app\\src\\AppElements\\ElementFormFloor.js":"13","C:\\Users\\mrbjr\\Documents\\app\\src\\AppElements\\ElementFormWall.js":"14","C:\\Users\\mrbjr\\Documents\\app\\src\\ResultsApp.js":"15","C:\\Users\\mrbjr\\Documents\\app\\src\\AppResults\\bosmang-core.js":"16"},{"size":2025,"mtime":1612544301535,"results":"17","hashOfConfig":"18"},{"size":532,"mtime":1611943646684,"results":"19","hashOfConfig":"18"},{"size":167,"mtime":1584591603000,"results":"20","hashOfConfig":"21"},{"size":2731,"mtime":1613063515577,"results":"22","hashOfConfig":"18"},{"size":949,"mtime":1611496194331,"results":"23","hashOfConfig":"24"},{"size":3895,"mtime":1611715975678,"results":"25","hashOfConfig":"18"},{"size":681,"mtime":1612539594269,"results":"26","hashOfConfig":"18"},{"size":13161,"mtime":1611767143960,"results":"27","hashOfConfig":"18"},{"size":1184,"mtime":1611786967649,"results":"28","hashOfConfig":"18"},{"size":6443,"mtime":1612973276511,"results":"29","hashOfConfig":"18"},{"size":3332,"mtime":1612482505603,"results":"30","hashOfConfig":"18"},{"size":3206,"mtime":1612884442031,"results":"31","hashOfConfig":"18"},{"size":4715,"mtime":1612443782705,"results":"32","hashOfConfig":"18"},{"size":22560,"mtime":1612902474277,"results":"33","hashOfConfig":"18"},{"size":3035,"mtime":1612541681430,"results":"34","hashOfConfig":"18"},{"size":52899,"mtime":1614033396231,"results":"35","hashOfConfig":"18"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1dkauza",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"124chq0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"5xk5ph",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":138,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"C:\\Users\\mrbjr\\Documents\\app\\src\\App.js",[],["75","76"],"C:\\Users\\mrbjr\\Documents\\app\\src\\index.js",[],"c:\\Users\\mrbjr\\Documents\\app\\src\\index.js",[],"C:\\Users\\mrbjr\\Documents\\app\\src\\scripts.js",["77"],"var user_database_js = [\r\n\t{\r\n\t\tname: 'Marcos',\r\n\t\tpassw: '42',\r\n\t\temail: 'mrbjr@outlook.com',\r\n\t\tprof: 'default',\r\n\t\tbg: '2',\r\n\t},\r\n\t{\r\n\t\tname: 'Visitante',\r\n\t\tpassw: 'guest',\r\n\t\temail: 'guest@br.com',\r\n\t\tprof: 'default',\r\n\t\tbg: '3',\r\n\t},\r\n\t{\r\n\t\tname: 'Matheus',\r\n\t\tpassw: 'guest',\r\n\t\temail: 'matheusvb2@gmail.com',\r\n\t\tprof: 'default',\r\n\t\tbg: '3',\r\n\t  },\r\n\t  {\r\n\t\tname: 'Visitante Livre',\r\n\t\tpassw: '',\r\n\t\temail: 'visitante',\r\n\t\tprof: '',\r\n\t\tbg: '3',\r\n\t\t}\r\n  ]\r\n\r\n  var materials = [\r\n\t{\r\n\t\tcateg: 'heavy',\r\n\t\tname: 'Concreto',\r\n\t\tbrand: 'ISO 12354-1:2017',\r\n\t\tdensity: 2200,\r\n\t\tym: undefined,\r\n\t\tpm: undefined,\r\n\t\twave: 3800,\r\n\t\tloss: 0.005,\r\n\t\tide: 1,\r\n\t},\r\n\t{\r\n\t\tcateg: 'float',\r\n\t\tname: 'Piso flutuante genérico (s=8)',\r\n\t\tbrand: 'ISO 12354-1:2017',\r\n\t\tdensity: 2100,\r\n\t\tym: 8,\r\n\t\ttp: 'sand', //sand ou asphalt\r\n\t\tide: 2,\r\n\t},\r\n\t{\r\n\t\tcateg: 'heavy',\r\n\t\tname: 'Calcium-silicate blocks',\r\n\t\tbrand: 'ISO 12354-1:2017',\r\n\t\tdensity: 1800,\r\n\t\tym: undefined,\r\n\t\tpm: undefined,\r\n\t\twave: 2500,\r\n\t\tloss: 0.01,\r\n\t\tide: 3,\r\n\t},\r\n\t{\r\n\t\tcateg: 'heavy',\r\n\t\tname: 'Autoclaved aerated concrete blocks',\r\n\t\tbrand: 'ISO 12354-1:2017',\r\n\t\tdensity: 800,\r\n\t\tym: undefined,\r\n\t\tpm: undefined,\r\n\t\twave: 1900,\r\n\t\tloss: 0.0125,\r\n\t\tide: 4,\r\n\t},\r\n\t{\r\n\t\tcateg: 'heavy',\r\n\t\tname: 'Lightweight aggregate blocks',\r\n\t\tbrand: 'ISO 12354-1:2017',\r\n\t\tdensity: 1400,\r\n\t\tym: undefined,\r\n\t\tpm: undefined,\r\n\t\twave: 2200,\r\n\t\tloss: 0.01,\r\n\t\tide: 5,\r\n\t},\r\n\t{\r\n\t\tcateg: 'heavy',\r\n\t\tname: 'Dense aggregate blocks',\r\n\t\tbrand: 'ISO 12354-1:2017',\r\n\t\tdensity: 2000,\r\n\t\tym: undefined,\r\n\t\tpm: undefined,\r\n\t\twave: 2700,\r\n\t\tloss: 0.01,\r\n\t\tide: 6,\r\n\t},\r\n\t{\r\n\t\tcateg: 'heavy',\r\n\t\tname: 'Bricks',\r\n\t\tbrand: 'ISO 12354-1:2017',\r\n\t\tdensity: 2000,\r\n\t\tym: undefined,\r\n\t\tpm: undefined,\r\n\t\twave: 2700,\r\n\t\tloss: 0.01,\r\n\t\tide: 7,\r\n\t},\r\n\t{\r\n\t\tcateg: 'heavy',\r\n\t\tname: 'Plasteboard (natural gypsum)',\r\n\t\tbrand: 'ISO 12354-1:2017',\r\n\t\tdensity: 860,\r\n\t\tym: undefined,\r\n\t\tpm: undefined,\r\n\t\twave: 1490,\r\n\t\tloss: 0.0141,\r\n\t\tide: 8,\r\n\t},\r\n\t{\r\n\t\tcateg: 'heavy',\r\n\t\tname: 'Plasteboard (flue gas and natural gypsum)',\r\n\t\tbrand: 'ISO 12354-1:2017',\r\n\t\tdensity: 680,\r\n\t\tym: undefined,\r\n\t\tpm: undefined,\r\n\t\twave: 1810,\r\n\t\tloss: 0.0125,\r\n\t\tide: 9,\r\n\t},\r\n\t{\r\n\t\tcateg: 'heavy',\r\n\t\tname: 'Chipboard',\r\n\t\tbrand: 'ISO 12354-1:2017',\r\n\t\tdensity: 760,\r\n\t\tym: undefined,\r\n\t\tpm: undefined,\r\n\t\twave: 2200,\r\n\t\tloss: 0.01,\r\n\t\tide: 10,\r\n\t},\r\n\t{\r\n\t\tcateg: 'heavy',\r\n\t\tname: 'Bloco de concreto',\r\n\t\tbrand: 'ISO 12354-1:2017',\r\n\t\tdensity: 600,\r\n\t\tym: undefined,\r\n\t\tpm: undefined,\r\n\t\twave: 1900,\r\n\t\tloss: 0.0125,\r\n\t\tide: 11,\r\n\t},\r\n\t{\r\n\t\tcateg: 'float',\r\n\t\tname: 'Piso Zero',\r\n\t\tbrand: 'zero',\r\n\t\tdensity: 0,\r\n\t\tym: 0,\r\n\t\ttp: 'sand', //sand ou asphalt\r\n\t\tide: 12,\r\n\t},\r\n  ]\r\n\r\nexport default {user_database_js,materials}; ","C:\\Users\\mrbjr\\Documents\\app\\src\\functions.js",["78","79","80","81","82"],"C:\\Users\\mrbjr\\Documents\\app\\src\\LoginFormApp.js",[],"C:\\Users\\mrbjr\\Documents\\app\\src\\LogoutApp.js",[],"C:\\Users\\mrbjr\\Documents\\app\\src\\MaterialsApp.js",["83","84","85","86","87","88","89"],"import React, {Component} from 'react'\r\n\r\nclass MaterialsListHeaderHeavy extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <thead>\r\n            <tr className=\"table_header_row\">\r\n                <th className=\"table_first_colun\">Descrição</th>\r\n                <th className=\"table_second_colun\">Marca</th>\r\n                <th>ρ (kg/m³)</th>\r\n                <th>C<sub>L</sub> (m/s)</th>\r\n                <th>η<sub>i</sub></th>\r\n                <th></th>\r\n            </tr>\r\n            </thead>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass MaterialsListHeaderFloat extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <thead>\r\n            <tr className=\"table_header_row\">\r\n                <th className=\"table_first_colun\">Descrição</th>\r\n                <th className=\"table_second_colun\">Marca</th>\r\n                <th>ρ (kg/m³)</th>\r\n                <th>s' (N/m²)</th>\r\n                <th>Tipo</th>\r\n                <th></th>\r\n            </tr>\r\n            </thead>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass MaterialsListBodyHeavy extends Component {\r\n\r\n    render(){\r\n\r\n        const {materialData, removeMaterial} = this.props\r\n\r\n        const heavyMaterials = materialData.filter(element =>(element.categ === 'heavy'))\r\n        \r\n        const rows = heavyMaterials.map((row, index) => {\r\n            return (\r\n              <tr key={index} className=\"table_row\" name={index}>\r\n                <td className=\"table_first_colun\">{row.name}</td>\r\n                <td className=\"table_second_colun\">{row.brand}</td>\r\n                <td className=\"table_colun\">{row.density}</td>\r\n                <td className=\"table_colun\">{row.wave}</td>\r\n                <td className=\"table_colun\">{row.loss}</td>\r\n                <td className=\"table_colun\"><img className=\"imge_act\" src=\"./_imge/_icons/delete_red.svg\" onClick={() => removeMaterial(index,row.categ)} alt=\"Remover material\" /></td>\r\n              </tr>\r\n            )\r\n          })\r\n\r\n        return(<tbody>{rows}</tbody>)\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\nclass MaterialsListBodyFloat extends Component {\r\n\r\n    render(){\r\n\r\n        const {materialData, removeMaterial} = this.props\r\n\r\n        const floatMaterials = materialData.filter(element =>(element.categ === 'float'))\r\n        \r\n        const rows = floatMaterials.map((row, index) => {\r\n            return (\r\n              <tr key={index} className=\"table_row\" name={index}>\r\n                <td className=\"table_first_colun\">{row.name}</td>\r\n                <td className=\"table_second_colun\">{row.brand}</td>\r\n                <td className=\"table_colun\">{row.density}</td>\r\n                <td className=\"table_colun\">{row.ym}</td>\r\n                <td className=\"table_colun\">{row.tp}</td>\r\n                <td className=\"table_colun\"><img className=\"imge_act\" src=\"./_imge/_icons/delete_red.svg\" onClick={() => removeMaterial(index,row.categ)}  alt=\"Remover material\" /></td>\r\n              </tr>\r\n            )\r\n          })\r\n\r\n        return(<tbody>{rows}</tbody>)\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\nclass MaterialFormHeavy extends Component{\r\n\r\n    initialState = {\r\n        categ: 'heavy',\r\n\t\tname: '',\r\n\t\tbrand: '',\r\n\t\tdensity: '',\r\n\t\tym: undefined,\r\n\t\tpm: undefined,\r\n\t\twave: '',\r\n        loss: '',\r\n        ide: '',\r\n    }\r\n    \r\n    state = this.initialState\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n      \r\n        this.setState({\r\n          [name]: value,\r\n        })\r\n      }\r\n    \r\n    submitForm = () => {\r\n\r\n        this.state.ide = this.props.materialData.length + 1\r\n\r\n        this.props.handleSubmit(this.state)\r\n        \r\n        this.setState(this.initialState)\r\n\r\n        \r\n      }\r\n\r\n    render(){\r\n\r\n        \r\n\r\n        const {categ,name,brand,density,ym,\tpm,\twave,loss} = this.state\r\n        \r\n        return(\r\n            <form>\r\n                <table>\r\n                    <tbody>\r\n                        <tr id=\"input_material\" className=\"table_row\">\r\n                            <td className=\"table_first_colun\"><input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"material_name\"\r\n                                className=\"material_list_input\"\r\n                                placeholder=\"Descrição\"\r\n                                value={name}\r\n                                onChange = {this.handleChange}\r\n                                /></td>\r\n                            \r\n                            <td className=\"table_second_colun\"><input\r\n                                type=\"text\"\r\n                                name=\"brand\"\r\n                                id=\"material_brand\"\r\n                                className=\"material_list_input\"\r\n                                placeholder=\"Marca\"\r\n                                value={brand}\r\n                                onChange = {this.handleChange} \r\n                                /></td>\r\n\r\n                            <td className=\"table_colun\"><input\r\n                                type=\"number\"\r\n                                name=\"density\"\r\n                                id=\"material_density\"\r\n                                className=\"material_list_input\"\r\n                                placeholder=\"ρ (kg/m³)\"\r\n                                value={density}\r\n                                onChange = {this.handleChange} \r\n                                /></td>\r\n                                \r\n                            <td className=\"table_colun\"><input\r\n                                type=\"number\"\r\n                                name=\"wave\"\r\n                                id=\"material_wave\"\r\n                                className=\"material_list_input\"\r\n                                placeholder=\"CL (m/s)\"\r\n                                value={wave}\r\n                                onChange = {this.handleChange}\r\n                                /></td>\r\n\r\n                            <td className=\"table_colun\"><input\r\n                                type=\"number\"\r\n                                name=\"loss\"\r\n                                id=\"material_loss\"\r\n                                className=\"material_list_input\"\r\n                                placeholder=\"ηi\"\r\n                                value={loss}\r\n                                onChange = {this.handleChange}\r\n                                /></td>\r\n\r\n                            <td className=\"table_colun\">\r\n                                <img src=\"./_imge/_icons/add_green.svg\" className=\"imge_act\" onClick = {this.submitForm} alt=\"Remover material\" />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>    \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nclass MaterialFormFloat extends Component{\r\n\r\n    initialState = {\r\n        categ: 'float',\r\n\t\tname: '',\r\n\t\tbrand: '',\r\n\t\tdensity: '',\r\n\t\tym: '',\r\n        tp: '',\r\n      }\r\n    \r\n    state = this.initialState\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n      \r\n        this.setState({\r\n          [name]: value,\r\n        })\r\n      }\r\n    \r\n    submitForm = () => {\r\n\r\n        this.state.ide = this.props.materialData.length + 1\r\n\r\n        this.props.handleSubmit(this.state)\r\n\r\n        this.setState(this.initialState)\r\n      }\r\n\r\n    render(){\r\n\r\n        const {categ,name,brand,density,ym,\ttp} = this.state\r\n        \r\n        return(\r\n            <form>\r\n                <table>\r\n                    <tbody>\r\n                        <tr id=\"input_material\" className=\"table_row\">\r\n                            <td className=\"table_first_colun\"><input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"material_name\"\r\n                                className=\"material_list_input\"\r\n                                placeholder=\"Descrição\"\r\n                                value={name}\r\n                                onChange = {this.handleChange}\r\n                                /></td>\r\n                            \r\n                            <td className=\"table_second_colun\"><input\r\n                                type=\"text\"\r\n                                name=\"brand\"\r\n                                id=\"material_brand\"\r\n                                className=\"material_list_input\"\r\n                                placeholder=\"Marca\"\r\n                                value={brand}\r\n                                onChange = {this.handleChange} \r\n                                /></td>\r\n\r\n                            <td className=\"table_colun\"><input\r\n                                type=\"number\"\r\n                                name=\"density\"\r\n                                id=\"material_density\"\r\n                                className=\"material_list_input\"\r\n                                placeholder=\"ρ (kg/m³)\"\r\n                                value={density}\r\n                                onChange = {this.handleChange} \r\n                                /></td>\r\n                                \r\n                            <td className=\"table_colun\"><input\r\n                                type=\"number\"\r\n                                name=\"ym\"\r\n                                id=\"material_ym\"\r\n                                className=\"material_list_input\"\r\n                                placeholder=\"s' (N/m²)\"\r\n                                value={ym}\r\n                                onChange = {this.handleChange}\r\n                                /></td>\r\n\r\n                            <td className=\"table_colun\"><select\r\n                                type=\"select\"\r\n                                name=\"tp\"\r\n                                id=\"material_tp\"\r\n                                className=\"material_list_input\"\r\n                                onChange = {this.handleChange}>\r\n                                    <option disabled selected>Selecione</option>\r\n                                    <option value='sand'>Arenoso/cimentício ou cálcio-sulfato</option>\r\n                                    <option value='asphalt'>Asfaltico/Seco</option>\r\n                                </select></td>\r\n\r\n                            <td className=\"table_colun\">\r\n                                <img src=\"./_imge/_icons/add_green.svg\" className=\"imge_act\" onClick = {this.submitForm} alt=\"Novo material\"/>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>    \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nclass MaterialsList extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n          materials: this.props.materialData}\r\n      }\r\n\r\n    //  checkCookies={this.checkCookies} setCookie={this.setCookie}\r\n\r\n    removeMaterial = (index,categ) => {\r\n        const {materials} = this.state\r\n\r\n        const dataFilter = materials.filter(element =>(element.categ === categ))\r\n\r\n        const dataPush =  materials.filter(element =>(element.categ !== categ))\r\n\r\n        const dataResult = dataFilter.filter((character, i) => {\r\n            return i !== index\r\n          }).concat(dataPush)\r\n          \r\n        this.setState({\r\n            materials: dataResult,\r\n        })\r\n\r\n        this.props.updateState('materials',dataResult)\r\n\r\n     //   this.props.setCookie('database_materials','[{obj1},{obj2}]')\r\n        \r\n      }\r\n      \r\n    handleSubmit = (newMaterial) => {\r\n\r\n        this.setState({materials: [...this.state.materials, newMaterial]})\r\n\r\n        \r\n       this.props.updateState('materials',[...this.state.materials, newMaterial])\r\n      }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"table_title\">Materiais Rígidos</div>\r\n                <table className=\"table_list\">\r\n                    <MaterialsListHeaderHeavy />\r\n                    <MaterialsListBodyHeavy materialData={this.state.materials} removeMaterial={this.removeMaterial}/>\r\n                </table>\r\n                <div>\r\n                <MaterialFormHeavy handleSubmit={this.handleSubmit} materialData={this.state.materials}/>\r\n                </div>\r\n\r\n\r\n                <div className=\"table_title\">Materiais Resilientes</div>\r\n                <table className=\"table_list\">\r\n                    <MaterialsListHeaderFloat />\r\n                    <MaterialsListBodyFloat materialData={this.state.materials} removeMaterial={this.removeMaterial}/>\r\n                </table>\r\n                <div>\r\n                <MaterialFormFloat handleSubmit={this.handleSubmit} materialData={this.state.materials}/>\r\n                </div>\r\n\r\n                <label className=\"minilabel\">Descrição: descrição do material | Marca: marca do material | ρ: denidade do material (kg/m³) | C<sub>L</sub>: velocidade de propagação da onda (m/s) | η<sub>i</sub>: perda interna do material | E: módulo de elasticidade (N/m²) | υ: coeficiente de poisson </label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MaterialsList;","C:\\Users\\mrbjr\\Documents\\app\\src\\AppsListApp.js",[],"C:\\Users\\mrbjr\\Documents\\app\\src\\AppDisplay.js",[],"C:\\Users\\mrbjr\\Documents\\app\\src\\ElementsApp.js",["90"],"import React, {Component} from 'react'\r\nimport ElementFormConstruc from './AppElements/ElementFormConstruc'\r\nimport ElementFormFloor from './AppElements/ElementFormFloor'\r\nimport ElementFormWall from './AppElements/ElementFormWall'\r\n\r\nclass ElementsApp extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            materials: this.props.materialData,\r\n            x: this.props.x,\r\n            y: this.props.y,\r\n            z1: this.props.z1,\r\n            z2: this.props.z2,\r\n\r\n            element_floor_material: this.props.element_floor_material,\r\n            element_floor_thin: this.props.element_floor_thin,\r\n            element_float_material: this.props.element_float_material,\r\n            element_float_thin: this.props.element_float_thin,\r\n\r\n            side_a: this.props.side_a,\r\n            side_b: this.props.side_b,\r\n            side_c: this.props.side_c,\r\n            side_d: this.props.side_d,\r\n            \r\n            side_a_junction: this.props.side_a_junction,\r\n            side_b_junction: this.props.side_b_junction,\r\n            side_c_junction: this.props.side_c_junction,\r\n            side_d_junction: this.props.side_d_junction,\r\n\r\n            junctionsGroup: this.props.junctionsGroup,\r\n            junctionsWalls: this.props.junctionsWalls,\r\n        }\r\n      }\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n      \r\n        this.setState({\r\n          [name]: value,\r\n        })\r\n\r\n        this.props.updateState([name],value)\r\n      }\r\n    \r\n    render(){\r\n\r\n        const {x,y,z1,z2,\r\n\r\n            element_floor_material,\r\n            element_floor_thin,\r\n            element_float_material,\r\n            element_float_thin,\r\n\r\n            side_a, side_b, side_c, side_d,\r\n            \r\n            side_a_junction,\r\n            side_b_junction,\r\n            side_c_junction,\r\n            side_d_junction,\r\n\r\n            junctionsGroup,\r\n            junctionsWalls,\r\n        \r\n        } = this.state\r\n\r\n        const {materials} = this.state\r\n\r\n        return (\r\n            <div>\r\n                    <ElementFormConstruc updateState={this.props.updateState} x={x} y={y} z1={z1} z2={z2} />\r\n\r\n                    \r\n\r\n                    <ElementFormWall materialData={materials} updateState={this.props.updateState}\r\n                            update3level={this.props.update3level}\r\n                            element_floor_material={element_floor_material}\r\n                            element_floor_thin={element_floor_thin}\r\n                            element_float_material={element_float_material}\r\n                            element_float_thin={element_float_thin}\r\n\r\n                                side_a={side_a} side_b={side_b} side_c={side_c} side_d={side_d}\r\n                            \r\n                                side_a_junction={side_a_junction}\r\n                                side_b_junction={side_b_junction}\r\n                                side_c_junction={side_c_junction}\r\n                                side_d_junction={side_d_junction}\r\n                                junctionsGroup={junctionsGroup}\r\n                                junctionsWalls={junctionsWalls}\r\n                    \r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ElementsApp;","C:\\Users\\mrbjr\\Documents\\app\\src\\AppElements\\ElementFormConstruc.js",[],["91","92"],"C:\\Users\\mrbjr\\Documents\\app\\src\\AppElements\\ElementFormFloor.js",[],"C:\\Users\\mrbjr\\Documents\\app\\src\\AppElements\\ElementFormWall.js",["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111"],"import React, {Component} from 'react'\r\n\r\nclass ElementFormWall extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            side: this.props.side,\r\n            materials: this.props.materialData,\r\n            x: this.props.x,\r\n            y: this.props.y,\r\n            z1: this.props.z1,\r\n            z2: this.props.z2,\r\n            element_floor_material: this.props.element_floor_material,\r\n            element_floor_thin: this.props.element_floor_thin,\r\n            element_float_material: this.props.element_float_material,\r\n            element_float_thin: this.props.element_float_thin,\r\n\r\n            side_a: this.props.side_a,\r\n            side_b: this.props.side_b,\r\n            side_c: this.props.side_c,\r\n            side_d: this.props.side_d,\r\n            \r\n            side_a_junction: this.props.side_a_junction,\r\n            side_b_junction: this.props.side_b_junction,\r\n            side_c_junction: this.props.side_c_junction,\r\n            side_d_junction: this.props.side_d_junction,\r\n\r\n            junctionsGroup: this.props.junctionsGroup,\r\n            junctionsWalls: this.props.junctionsWalls,\r\n        }\r\n        \r\n      }\r\n\r\n      handleChange = (event) => {\r\n        const {name, type, value} = event.target\r\n        const {materials} = this.state\r\n\r\n        const side = 'side_' + name.slice(5,6)\r\n        const part =  name.slice(7,11)\r\n        const statefinal = name.slice(12,20)\r\n\r\n        if ((name.slice(0,4) === 'side') && (name.slice(7,20) === 'junction')){\r\n            this.setState({\r\n                [name]:value,\r\n            })\r\n\r\n            this.props.updateState(name,value)\r\n\r\n        }\r\n        \r\n        if ((name.slice(0,4) === 'side') && (name.slice(7,20) !== 'junction')){\r\n            if (type === 'select-one'){\r\n                const materialResult = materials.filter(element =>(element.ide === Number(value)))[0]\r\n                this.state[side][part]['material'] = materialResult||value  \r\n                this.setState({[side]: this.state[side]})  \r\n            } else {\r\n                this.state[side][part]['thin'] = value  \r\n                this.setState({[side]: this.state[side]})\r\n            }\r\n        }\r\n        \r\n        if ((name.slice(0,4) !== 'side') && (name.slice(7,20) !== 'junction')){\r\n        \r\n                if (type === 'select-one'){\r\n                    const materialResult = materials.filter(element =>(element.ide === Number(value)))[0]\r\n                    this.setState({\r\n                        [name]: materialResult||value,\r\n                    })\r\n\r\n                    this.props.updateState([name],materialResult||value)  \r\n\r\n                } else {\r\n\r\n                    this.setState({\r\n                        [name]: value,\r\n                    })\r\n\r\n                    this.props.updateState([name],value)\r\n                }\r\n        }\r\n\r\n        if((name === 'element_floor_thin')||(name === 'element_floor_material')){\r\n\r\n            if (this.state['side_a']['padc']['clone'] === true) {\r\n                if (name === 'element_floor_thin'){\r\n                    this.state['side_a']['padc']['thin'] = value\r\n                    this.setState({side_a: this.state.side_a})\r\n                }\r\n                if (name === 'element_floor_material'){\r\n                    const materialResult = materials.filter(element =>(element.ide === Number(value)))[0]\r\n                    this.state['side_a']['padc']['material'] = materialResult\r\n                    this.setState({side_a: this.state.side_a})\r\n                }  \r\n            }\r\n        \r\n            if (this.state['side_b']['padc']['clone'] === true) {\r\n                if (name === 'element_floor_thin'){\r\n                    this.state['side_b']['padc']['thin'] = value\r\n                    this.setState({side_b: this.state.side_b})\r\n                }\r\n                if (name === 'element_floor_material'){\r\n                    const materialResult = materials.filter(element =>(element.ide === Number(value)))[0]\r\n                    this.state['side_b']['padc']['material'] = materialResult\r\n                    this.setState({side_b: this.state.side_b})\r\n                }     \r\n            }\r\n        \r\n            if (this.state['side_c']['padc']['clone'] === true) {\r\n                if (name === 'element_floor_thin'){\r\n                    this.state['side_c']['padc']['thin'] = value\r\n                    this.setState({side_c: this.state.side_c})\r\n        \r\n                }\r\n                if (name === 'element_floor_material'){\r\n                    const materialResult = materials.filter(element =>(element.ide === Number(value)))[0]\r\n                    this.state['side_c']['padc']['material'] = materialResult\r\n                    this.setState({side_c: this.state.side_c})\r\n                } \r\n            }\r\n        \r\n            if (this.state['side_d']['padc']['clone'] === true) {\r\n                if (name === 'element_floor_thin'){\r\n                    this.state['side_d']['padc']['thin'] = value\r\n                    this.setState({side_d: this.state.side_d})\r\n                }\r\n                if (name === 'element_floor_material'){\r\n                    const materialResult = materials.filter(element =>(element.ide === Number(value)))[0]\r\n                    this.state['side_d']['padc']['material'] = materialResult\r\n                    this.setState({side_d: this.state.side_d})\r\n                }  \r\n            }\r\n        \r\n        }\r\n\r\n        if ((name.slice(0,4) === 'side') && (name.slice(7,20) !== 'junction') && (part !== 'padc')){\r\n            \r\n            if (this.state[side]['pinf']['clone'] === true){\r\n                if (statefinal === 'material'){\r\n                    const materialResult = materials.filter(element =>(element.ide === Number(value)))[0]\r\n                    this.state[side]['pinf']['material'] = materialResult\r\n                    this.setState({[side]: this.state[side]})             \r\n                }\r\n                if (statefinal === 'thin'){\r\n                    this.state[side]['pinf']['thin'] = value\r\n                    this.setState({[side]: this.state[side]})            \r\n                    \r\n                }\r\n            }\r\n        }\r\n\r\n      }\r\n\r\n      junctionsGroupSolve = (index,e)=>{\r\n\r\n        const {junctionsGroup} = this.state\r\n\r\n        const endGroup = junctionsGroup\r\n\r\n        const {value} = e.target\r\n\r\n        endGroup[index.index] = value\r\n\r\n        this.setState({\r\n            junctionsGroup: endGroup,\r\n        })\r\n\r\n        this.props.updateState('junctionsGroup',endGroup)\r\n\r\n        this.junctionsWallsSolve(endGroup)\r\n\r\n      }\r\n\r\n      junctionsWallsSolve = (junctionsGroup) => {\r\n\r\n        const group01 = junctionsGroup[0] + junctionsGroup[1]\r\n        const group02 = junctionsGroup[1] + junctionsGroup[2]\r\n        const group03 = junctionsGroup[2] + junctionsGroup[3]\r\n        const group04 = junctionsGroup[3] + junctionsGroup[0]\r\n\r\n        const wallsGroup = [group01,group02,group03,group04]\r\n\r\n        const endWalls = this.state.junctionsWalls\r\n\r\n        for (var i=0;i<wallsGroup.length;i++){\r\n            switch (wallsGroup[i]){\r\n                case ('XX'):\r\n                    endWalls[i] = 'X'\r\n                break\r\n                case ('XT'):\r\n                    endWalls[i] = 'T'\r\n                break\r\n                case ('TX'):\r\n                    endWalls[i] = 'T2'\r\n                break\r\n                case ('TT'):\r\n                    endWalls[i] = 'L'\r\n                break\r\n                default:\r\n                    endWalls[i] = ''\r\n            }\r\n\r\n            this.setState({\r\n                junctionsWalls: endWalls\r\n            })\r\n        }\r\n\r\n        this.props.updateState('junctionsWalls',endWalls)\r\n\r\n      }\r\n\r\n      cloneElements = (event) => {\r\n          const {name} = event.target\r\n\r\n            const side = 'side_' + name.slice(5,6)\r\n            const part =  name.slice(7,11)\r\n            const value = this.state[side][part]['clone']        \r\n\r\n          if (value === false){\r\n\r\n              if (part ==='padc'){\r\n                  var floor_material = this.state.element_floor_material\r\n                  var floor_thin = this.state.element_floor_thin\r\n                  this.state[side]['padc']['material'] = floor_material\r\n                  this.state[side]['padc']['thin'] = floor_thin\r\n                  this.state[side]['padc']['clone'] = !value\r\n                  this.setState({[side]: this.state[side]})\r\n              }\r\n\r\n              if (part === 'pinf'){\r\n                    var psup_material = this.state[side]['psup']['material']\r\n                    var psup_thin = this.state[side]['psup']['thin']\r\n                    this.state[side]['pinf']['material'] = psup_material\r\n                    this.state[side]['pinf']['thin'] = psup_thin\r\n                  this.state[side]['pinf']['clone'] = !value\r\n                  this.setState({[side]: this.state[side]})\r\n            }\r\n        \r\n            } else {\r\n                this.state[side][part]['clone'] = !value\r\n                this.setState({[side]: this.state[side]})\r\n            }\r\n      }\r\n\r\n    render(){\r\n\r\n            const sidearray = ['a','b','c','d']\r\n\r\n            const {element_floor_thin,element_float_thin,element_floor_material,element_float_material} = this.state\r\n\r\n            const heavyMaterials = this.props.materialData.filter(element =>(element.categ === 'heavy'))\r\n            const floatMaterials = this.props.materialData.filter(element =>(element.categ === 'float'))\r\n\r\n            const optionsHeavy = heavyMaterials.map((row, index) => {return (<option value={row.ide} key={index}>{row.name}</option>)})\r\n            const optionsFloat = floatMaterials.map((row, index) => {return (<option value={row.ide} key={index}>{row.name}</option>)})\r\n\r\n            const floorForm = \r\n                \r\n                    <table className=\"table_list\">\r\n                    <thead>\r\n                        <tr className=\"table_header_row\"><th></th><th>Material</th><th>Espessura (mm)</th></tr></thead>\r\n                        <tbody>\r\n\r\n                            <tr className=\"table_row\">\r\n                                <td className=\"table_first_colun\">Piso</td>\r\n                                <td className=\"table_colun\">\r\n                                <select name=\"element_floor_material\" className=\"material_list_input\" onChange = {this.handleChange} value={element_floor_material.ide}><option value='0' selected disabled>Selecione</option>{optionsHeavy}</select>\r\n                                </td>\r\n                                <td className=\"table_colun\"><input\r\n                                    type=\"number\"\r\n                                    name=\"element_floor_thin\"\r\n                                    className=\"material_list_input\"\r\n                                    placeholder=\"(mm)\"\r\n                                    value={element_floor_thin}\r\n                                    onChange = {this.handleChange}\r\n                                    /></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"table_row\">\r\n                                <td className=\"table_first_colun\">Piso flutuante (adicionar botão para desabilitar)</td>\r\n                                <td className=\"table_colun\">\r\n                                    <select name=\"element_float_material\" className=\"material_list_input\" onChange = {this.handleChange} value={element_float_material.ide}><option value='0' selected disabled>Selecione</option>{optionsFloat}</select>\r\n                                </td>\r\n                                <td className=\"table_colun\"><input\r\n                                    type=\"number\"\r\n                                    name=\"element_float_thin\"\r\n                                    className=\"material_list_input\"\r\n                                    placeholder=\"(mm)\"\r\n                                    value={element_float_thin}\r\n                                    onChange = {this.handleChange}\r\n                                    /></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"table_row\">\r\n                                <td className=\"table_first_colun\">Outra camada</td>\r\n                                <td className=\"table_colun\"> FORROS E AFINS</td>\r\n                                <td className=\"table_colun\"> ADICONAR NO FUTURO</td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                </table>\r\n                \r\n            const eachWallSide = sidearray.map((element, index) =>{\r\n                    \r\n                        const side_name = element.toUpperCase()\r\n                        const side_x = \"side_\" + element\r\n                        const side_x_junction = side_x+'_junction' \r\n                        const side_x_psup_material =  side_x+\"_psup_material\"\r\n                        const side_x_pinf_material =  side_x + \"_pinf_material\"\r\n                        const side_x_padc_material =  side_x + \"_padc_material\"\r\n                        const side_x_psup_thin =  side_x + \"_psup_thin\"\r\n                        const side_x_pinf_thin =  side_x + \"_pinf_thin\"\r\n                        const side_x_padc_thin =  side_x + \"_padc_thin\"\r\n                        const side_x_pinf_clone =  side_x + \"_pinf_clone\"\r\n                        const side_x_padc_clone =  side_x + \"_padc_clone\"\r\n\r\n                        const padc_select = () => {\r\n                            if (this.state[side_x]['padc']['clone'] === true){\r\n                                return (\r\n                                    <tr className=\"table_row\">\r\n                                    <td className=\"table_first_colun\">\r\n                                        Piso adjacente\r\n                                         <img src=\"./_imge/_icons/same_gray.svg\" alt=\"Clonar\" className=\"imge_mini imge_clone\" name={side_x_padc_clone} onClick ={e =>{this.cloneElements(e)}}/>\r\n                                    </td>\r\n                                    <td className=\"table_colun\">\r\n                                    <select name={side_x_padc_material} className=\"material_list_input\" value={this.state[side_x]['padc']['material'].ide} disabled><option value='0' selected disabled>Selecione</option>{optionsHeavy}</select>\r\n                                    </td>\r\n                                    <td className=\"table_colun\"><input\r\n                                        type=\"number\"\r\n                                        name={side_x_padc_thin}\r\n                                        className=\"material_list_input\"\r\n                                        placeholder=\"(mm)\"\r\n                                        value={this.state[side_x]['padc']['thin']}\r\n                                        disabled\r\n                                        /></td>\r\n                                    </tr>\r\n                                )} else{\r\n                                return (\r\n                                    <tr className=\"table_row\">\r\n                                    <td className=\"table_first_colun\">\r\n                                        Piso adjacente\r\n                                        <img src=\"./_imge/_icons/same_black.svg\" alt=\"Clonar\" className=\"imge_mini imge_clone\" name={side_x_padc_clone} onClick ={e =>{this.cloneElements(e)}}/>\r\n                                    </td>\r\n                                    <td className=\"table_colun\">\r\n                                    <select name={side_x_padc_material} className=\"material_list_input\" value={this.state[side_x]['padc']['material'].ide} onChange = {this.handleChange}><option value='0' selected disabled>Selecione</option>{optionsHeavy}</select>\r\n                                    </td>\r\n                                    <td className=\"table_colun\"><input\r\n                                        type=\"number\"\r\n                                        name={side_x_padc_thin}\r\n                                        className=\"material_list_input\"\r\n                                        placeholder=\"(mm)\"\r\n                                        value={this.state[side_x]['padc']['thin']}\r\n                                        onChange = {this.handleChange}\r\n                                        /></td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        } \r\n\r\n                        const padcDo = () => {if (this.state[side_x_junction] === 'X'){\r\n                            return (\r\n\r\n                \r\n                                padc_select()\r\n                        \r\n\r\n                            )}\r\n                        } \r\n\r\n                        const pinfDo = () => {\r\n                            if (this.state[side_x]['pinf']['clone'] === true){\r\n                                return(\r\n                                <tr className=\"table_row\">\r\n                                <td className=\"table_first_colun\">\r\n                                    Inferior\r\n                                    <img src=\"./_imge/_icons/same_gray.svg\" alt=\"Clonar\" className=\"imge_mini imge_clone\" name={side_x_pinf_clone} onClick ={e =>{this.cloneElements(e)}}/>\r\n                                </td>\r\n                                <td className=\"table_colun\">\r\n                                    <select name={side_x_pinf_material} className=\"material_list_input\" value={this.state[side_x]['pinf']['material'].ide} disabled><option value='0' selected disabled>Selecione</option>{optionsHeavy}</select>\r\n                                </td>\r\n                                <td className=\"table_colun\"><input\r\n                                    type=\"number\"\r\n                                    name={side_x_pinf_thin}\r\n                                    className=\"material_list_input\"\r\n                                    placeholder=\"(mm)\"\r\n                                    value={this.state[side_x]['pinf']['thin']}\r\n                                    disabled\r\n                                    /></td>\r\n                                </tr>)\r\n                                } else { \r\n                                    return(\r\n                                    <tr className=\"table_row\">\r\n                                    <td className=\"table_first_colun\">\r\n                                        Inferior\r\n                                        <img src=\"./_imge/_icons/same_black.svg\" alt=\"Clonar\" className=\"imge_mini imge_clone\" name={side_x_pinf_clone} onClick ={e =>{this.cloneElements(e)}}/>\r\n                                    </td>\r\n                                    <td className=\"table_colun\">\r\n                                        <select name={side_x_pinf_material} className=\"material_list_input\" onChange = {this.handleChange} value={this.state[side_x]['pinf']['material'].ide}><option value='0' selected disabled>Selecione</option>{optionsHeavy}</select>\r\n                                    </td>\r\n                                    <td className=\"table_colun\"><input\r\n                                        type=\"number\"\r\n                                        name={side_x_pinf_thin}\r\n                                        className=\"material_list_input\"\r\n                                        placeholder=\"(mm)\"\r\n                                        value={this.state[side_x]['pinf']['thin']}\r\n                                        onChange = {this.handleChange}\r\n                                        /></td>\r\n                                </tr>)\r\n                            }\r\n                            \r\n                        } \r\n\r\n                    return(\r\n\r\n                       <table className=\"table_list\" key={index}>\r\n                        <thead>\r\n                            <tr className=\"table_header_row\"><th className=\"table_first_colun\">Lado {side_name} [{index}]</th><th>Material</th><th>Espessura (mm)</th></tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            <tr className=\"table_row\">\r\n                                <td className=\"table_first_colun\">Junção</td>\r\n                                <td className=\"table_colun\">\r\n                                <select name={side_x_junction} className=\"material_list_input\" onChange = {e =>{this.junctionsGroupSolve({index},e);this.handleChange(e)}} value={this.state[side_x_junction]}>\r\n                                    <option value='0' selected disabled>Selecione</option>\r\n                                    <option value=\"X\">X</option>\r\n                                    <option value=\"T\">T</option>\r\n                                    <option value=\"L\">L</option>\r\n                                </select>\r\n                                </td>\r\n                                <td className=\"table_colun\"></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"table_row\">\r\n                                <td className=\"table_first_colun\">Superior</td>\r\n                                <td className=\"table_colun\">\r\n                                <select name={side_x_psup_material} className=\"material_list_input\" onChange = {this.handleChange} value={this.state[side_x]['psup']['material'].ide}><option value='0' selected disabled>Selecione</option>{optionsHeavy}</select>\r\n                                </td>\r\n                                <td className=\"table_colun\"><input\r\n                                    type=\"number\"\r\n                                    name={side_x_psup_thin}\r\n                                    className=\"material_list_input\"\r\n                                    placeholder=\"(mm)\"\r\n                                    value={this.state[side_x]['psup']['thin']}\r\n                                    onChange = {this.handleChange}\r\n                                    /></td>\r\n                            </tr>\r\n\r\n                           \r\n                            {pinfDo()}\r\n\r\n                            {padcDo()}  \r\n                           \r\n\r\n                        </tbody>\r\n                        </table> \r\n                        )\r\n                        })\r\n                        \r\n        return (<div>{floorForm}\r\n        {eachWallSide}</div>)\r\n            \r\n    \r\n\r\n    }\r\n    \r\n            \r\n}\r\n\r\nexport default ElementFormWall","C:\\Users\\mrbjr\\Documents\\app\\src\\ResultsApp.js",[],"C:\\Users\\mrbjr\\Documents\\app\\src\\AppResults\\bosmang-core.js",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249"],"import React, {Component} from 'react'\r\n\r\nfunction log10(x) {return Number(Math.LOG10E*Math.log(x))};\r\n\r\nconst c0 = 340 // velocidade de propagação do som no ar\r\nconst p0 = 1.29;\r\nconst freq = [50,63,80,100,125,160,200,250,315,400,500,630,800,1000,1250,1600,2000,2500,3150,4000,5000];//21 [0~20]\r\nconst fref = 1000;\r\n\r\nfunction tabajara(W,type,vaivai){\r\n\tvar C = type.slice(0,1) === \"L\" ? [62,62,62,62,62,62,61,60,59,58,57,54,51,48,45,42] : [33,36,39,42,45,48,51,52,53,54,55,56,56,56,56,56];\r\n\tvar R = (Number(Math.abs(W[0])) === 0) || (W[0] === Infinity) || (W[0] === null) ? 32 : 0;\r\n   // console.log(W)\r\n    //console.log(R)\r\n\tvar n = 0;\r\n    var k = type.slice(0,1) === \"L\" ? 1 : -1\r\n\tvar Lnsum=0;\r\n\tvar Lnsum2=0;\r\n\t\r\n\twhile ((32-R>=0.1)||(R-32>0)) {\r\n\t\t\r\n\t\t//FUNÇÃO DELTA\r\n\t\tvar sW=0;\r\n\t\tvar D = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\r\n\t\tfor (var i=0;i<freq.length-5;i++){\r\n\t\t\tD[i] = (W[i+3]-C[i])*k;\r\n\t\t\tif (D[i]>0){sW = sW + D[i]}\r\n\t\t}\r\n\t\t//FIM FUNÇÃO DELTA\r\n\r\n\t\t\tR = sW;\r\n\t\t\r\n\t\tif (((32-R)>=0.1)||((R-32)>0)){\r\n\r\n\t\t\t//FUNÇÃO VERIFICAR\r\n\t\t\tif (sW<32) {n=-0.01*k};\r\n\t\t\tif (sW>32) {n=0.01*k};\r\n\t\t\tif (sW==32) {n=0*k};\r\n\t\t\t//FIM FUNÇÃO VERIFICAR\r\n\t\t\t\r\n\t\t\t//FUNÇÃO REAJUSTE\r\n\t\t\tfor (var i=0;i<freq.length-5;i++){\r\n\t\t\t\tC[i] = C[i]+n;\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvar Nw=W[0] === (0||Infinity||null||false) ? 0 :C[7];  \r\n\r\n    ////// parte adicional\r\n\r\n\tif (type.slice(0,1) === \"L\") {\r\n\tfor (var i=0;i<freq.length-5;i++){\r\n\t\tvar Lnsum = Lnsum + Math.pow(10,0.1*W[i+3]);\r\n\t}\r\n\t\r\n\tfor (var i=0;i<freq.length-2;i++){\r\n\t\tvar Lnsum2 = Lnsum2 + Math.pow(10,0.1*W[i]);\r\n\t}\r\n\t\tvar Ci = 10*log10(Lnsum)-15-Nw;\r\n\t\tvar Ci2 = 10*log10(Lnsum2)-15-Nw;\r\n\t\tif (Ci>=0){Ci = Ci+0.5} else {Ci = Ci-0.5};\r\n\t\tCi = Math.trunc(Ci);\r\n\t\tif (Ci2>=0){Ci2 = Ci2+0.5} else {Ci2 = Ci2-0.5};\r\n\t\tCi2 = Math.trunc(Ci2);\r\n\t\tNw=parseInt(C[7]*10+0.5)/10;\r\n\t\tconsole.log (type + \" (Ci; Ci50-2500)= \" + Nw + \" (\" + Ci + \"; \" + Ci2 + \") dB\");\r\n    } else {\r\n        Nw=parseInt(C[7]*10+0.5)/10;\r\n        console.log (type + \" (Ci; Ci50-2500)= \" + Nw + \" dB /// falta calcular adaptação\");\r\n    }\r\n\t\t//doChart(C,W,freq,Ci,Ci2);  */\r\n\r\n}\r\n\r\nclass BosmangCore extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n\r\n            junctionsGroup: this.props.junctionsGroup,\r\n            junctionsWalls: this.props.junctionsWalls,\r\n\r\n            prediction: {\r\n            },\r\n\r\n            floor: {\r\n                material: this.props.element_floor_material, // NÃO USADO???\r\n                x: Number(this.props.x),\r\n                y: Number(this.props.y),\r\n                thin: Number(this.props.element_floor_thin),\r\n                density: Number(this.props.element_floor_material.density), //me\r\n                cl: Number(this.props.element_floor_material.wave),\r\n                nint: Number(this.props.element_floor_material.loss),\r\n            },\r\n\r\n            float: {\r\n                material: this.props.element_float_material,\r\n                thin: Number(this.props.element_float_thin),\r\n                density: Number(this.props.element_float_material.density),\r\n                ym: Number(this.props.element_float_material.ym),\r\n                tp: this.props.element_float_material.tp,\r\n            },\r\n\r\n            side_a_psup: {\r\n                material: this.props.side_a['psup']['material'], // NÃO USADO???\r\n                x: Number(this.props.y),\r\n                y: Number(this.props.z1),\r\n                thin: Number(this.props.side_a['psup']['thin']),\r\n                density: Number(this.props.side_a['psup']['material'].density), //me\r\n                cl: Number(this.props.side_a['psup']['material'].wave),\r\n                nint: Number(this.props.side_a['psup']['material'].loss),\r\n            },\r\n\r\n            side_a_pinf: {\r\n                material: this.props.side_a['pinf']['material'], // NÃO USADO???\r\n                x: Number(this.props.y),\r\n                y: Number(this.props.z2),\r\n                thin: Number(this.props.side_a['pinf']['thin']),\r\n                density: Number(this.props.side_a['pinf']['material'].density), //me\r\n                cl: Number(this.props.side_a['pinf']['material'].wave),\r\n                nint: Number(this.props.side_a['pinf']['material'].loss),\r\n            },\r\n\r\n            side_a_padc: {\r\n                material: this.props.side_a['padc']['material'], // NÃO USADO???\r\n                x: Number(this.props.x),\r\n                y: Number(this.props.y),\r\n                thin: Number(this.props.side_a['padc']['thin']),\r\n                density: Number(this.props.side_a['padc']['material'].density), //me\r\n                cl: Number(this.props.side_a['padc']['material'].wave),\r\n                nint: Number(this.props.side_a['padc']['material'].loss),\r\n            },\r\n\r\n            side_b_psup: {\r\n                material: this.props.side_b['psup']['material'], // NÃO USADO???\r\n                x: Number(this.props.x),\r\n                y: Number(this.props.z1),\r\n                thin: Number(this.props.side_b['psup']['thin']),\r\n                density: Number(this.props.side_b['psup']['material'].density), //me\r\n                cl: Number(this.props.side_b['psup']['material'].wave),\r\n                nint: Number(this.props.side_b['psup']['material'].loss),\r\n            },\r\n\r\n            side_b_pinf: {\r\n                material: this.props.side_b['pinf']['material'], // NÃO USADO???\r\n                x: Number(this.props.x),\r\n                y: Number(this.props.z2),\r\n                thin: Number(this.props.side_b['pinf']['thin']),\r\n                density: Number(this.props.side_b['pinf']['material'].density), //me\r\n                cl: Number(this.props.side_b['pinf']['material'].wave),\r\n                nint: Number(this.props.side_b['pinf']['material'].loss),\r\n            },\r\n\r\n            side_b_padc: {\r\n                material: this.props.side_b['padc']['material'], // NÃO USADO???\r\n                x: Number(this.props.x),\r\n                y: Number(this.props.y),\r\n                thin: Number(this.props.side_b['padc']['thin']),\r\n                density: Number(this.props.side_b['padc']['material'].density), //me\r\n                cl: Number(this.props.side_b['padc']['material'].wave),\r\n                nint: Number(this.props.side_b['padc']['material'].loss),\r\n            },\r\n\r\n            side_c_psup: {\r\n                material: this.props.side_c['psup']['material'], // NÃO USADO???\r\n                x: Number(this.props.y),\r\n                y: Number(this.props.z1),\r\n                thin: Number(this.props.side_c['psup']['thin']),\r\n                density: Number(this.props.side_c['psup']['material'].density), //me\r\n                cl: Number(this.props.side_c['psup']['material'].wave),\r\n                nint: Number(this.props.side_c['psup']['material'].loss),\r\n            },\r\n\r\n            side_c_pinf: {\r\n                material: this.props.side_c['pinf']['material'], // NÃO USADO???\r\n                x: Number(this.props.y),\r\n                y: Number(this.props.z2),\r\n                thin: Number(this.props.side_c['pinf']['thin']),\r\n                density: Number(this.props.side_c['pinf']['material'].density), //me\r\n                cl: Number(this.props.side_c['pinf']['material'].wave),\r\n                nint: Number(this.props.side_c['pinf']['material'].loss),\r\n            },\r\n\r\n            side_c_padc: {\r\n                material: this.props.side_c['padc']['material'], // NÃO USADO???\r\n                x: Number(this.props.x),\r\n                y: Number(this.props.y),\r\n                thin: Number(this.props.side_c['padc']['thin']),\r\n                density: Number(this.props.side_c['padc']['material'].density), //me\r\n                cl: Number(this.props.side_c['padc']['material'].wave),\r\n                nint: Number(this.props.side_c['padc']['material'].loss),\r\n            },\r\n\r\n            side_d_psup: {\r\n                material: this.props.side_d['psup']['material'], // NÃO USADO???\r\n                x: Number(this.props.x),\r\n                y: Number(this.props.z1),\r\n                thin: Number(this.props.side_d['psup']['thin']),\r\n                density: Number(this.props.side_d['psup']['material'].density), //me\r\n                cl: Number(this.props.side_d['psup']['material'].wave),\r\n                nint: Number(this.props.side_d['psup']['material'].loss),\r\n            },\r\n\r\n            side_d_pinf: {\r\n                material: this.props.side_d['pinf']['material'], // NÃO USADO???\r\n                x: Number(this.props.x),\r\n                y: Number(this.props.z2),\r\n                thin: Number(this.props.side_d['pinf']['thin']),\r\n                density: Number(this.props.side_d['pinf']['material'].density), //me\r\n                cl: Number(this.props.side_d['pinf']['material'].wave),\r\n                nint: Number(this.props.side_d['pinf']['material'].loss),\r\n            },\r\n\r\n            side_d_padc: {\r\n                material: this.props.side_d['padc']['material'], // NÃO USADO???\r\n                x: Number(this.props.x),\r\n                y: Number(this.props.y),\r\n                thin: Number(this.props.side_d['padc']['thin']),\r\n                density: Number(this.props.side_d['padc']['material'].density), //me\r\n                cl: Number(this.props.side_d['padc']['material'].wave),\r\n                nint: Number(this.props.side_d['padc']['material'].loss),\r\n            },\r\n\r\n            junction_a : {\r\n                type: this.props.side_a_junction,\r\n            },\r\n            \r\n            junction_b : {\r\n                type: this.props.side_b_junction,\r\n            },\r\n            \r\n            junction_c : {\r\n                type: this.props.side_c_junction,\r\n            },\r\n                    \r\n            junction_d : {\r\n                type: this.props.side_d_junction,\r\n            },\r\n\r\n            junction_1 : {\r\n                type: this.props.junctionsWalls[0],\r\n            },\r\n            \r\n            junction_2 : {\r\n                type: this.props.junctionsWalls[1],\r\n            },\r\n            \r\n            junction_3 : {\r\n                type: this.props.junctionsWalls[2],\r\n            },\r\n            \r\n            junction_4 : {\r\n                type: this.props.junctionsWalls[3],\r\n            },\r\n            \r\n            junction_5 : {\r\n                type: this.props.junctionsWalls[0],\r\n            },\r\n            \r\n            junction_6 : {\r\n                type: this.props.junctionsWalls[1],\r\n            },\r\n            \r\n            junction_7 : {\r\n                type: this.props.junctionsWalls[2],\r\n            },\r\n            \r\n            junction_8 : {\r\n                type: this.props.junctionsWalls[3],\r\n            },\r\n\r\n            flank_a : {}, flank_b : {}, flank_c : {}, flank_d : {},\r\n\r\n            flank_floor_floor: {},\r\n            \r\n            \r\n        }\r\n      }\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n      \r\n        this.setState({\r\n          [name]: value,\r\n        })\r\n\r\n        this.props.updateState([name],value)\r\n      }\r\n\r\n    verifyStats = () => {\r\n        if (this.state.side_a_psup.thin === 0 || this.state.side_a_psup.material.ide === 0 ||\r\n            this.state.side_a_pinf.thin === 0 || this.state.side_a_pinf.material.ide === 0 ||\r\n            this.state.side_a_padc.thin === 0 || this.state.side_a_padc.material.ide === 0 ) this.state.flank_a.kij = [undefined]\r\n        \r\n        if (this.state.side_b_psup.thin === 0 || this.state.side_b_psup.material.ide === 0 ||\r\n            this.state.side_b_pinf.thin === 0 || this.state.side_b_pinf.material.ide === 0 ||\r\n            this.state.side_b_padc.thin === 0 || this.state.side_b_padc.material.ide === 0 ) this.state.flank_b.kij = [undefined]\r\n\r\n        if (this.state.side_c_psup.thin === 0 || this.state.side_c_psup.material.ide === 0 ||\r\n            this.state.side_c_pinf.thin === 0 || this.state.side_c_pinf.material.ide === 0 ||\r\n            this.state.side_c_padc.thin === 0 || this.state.side_c_padc.material.ide === 0 ) this.state.flank_c.kij = [undefined]\r\n\r\n        if (this.state.side_d_psup.thin === 0 || this.state.side_d_psup.material.ide === 0 ||\r\n            this.state.side_d_pinf.thin === 0 || this.state.side_d_pinf.material.ide === 0 ||\r\n            this.state.side_d_padc.thin === 0 || this.state.side_d_padc.material.ide === 0 ) this.state.flank_d.kij = [undefined]\r\n    }\r\n\r\n      elementSi = (element) => {return element.x*element.y}\r\n      elementl1 = (element) => {return Math.max(element.x,element.y)}\r\n      elementl2 = (element) => {return Math.min(element.x,element.y)}\r\n      elementsmass = (element) => {return element.density*element.thin/1000} // mlinha\r\n      elementfc = (element) => {return Math.pow(c0,2)/(1.8*element.cl*element.thin/1000)}\r\n      elementf11 = (element) =>  {return (Math.pow(c0,2)/(4*element.fc))*((1/Math.pow(element.l1,2))+(1/Math.pow(element.l2,2)))}\r\n      elementsigma1 = (element) =>  {return freq.map((freq)=>{return 1/Math.sqrt(1-element.fc/freq)})}\r\n      elementsigma2 = (element) =>  {return freq.map((freq)=>{return 4*element.l1*element.l2*Math.pow(freq/c0,2)})}\r\n      elementsigma3 = (element) =>  {return freq.map((freq)=> {return Math.sqrt((2*Math.PI*freq*(element.l1+element.l2))/(16*c0))})}\r\n      elementsigma = (element) =>  {return freq.map((freq,index)=>{\r\n          \r\n          if (element.f11 > element.fc/2){\r\n              if (freq < element.fc){\r\n                  return Math.min(2,element.sigma2[index] < element.sigma3[index] ? element.sigma2[index] : element.sigma3[index]) \r\n              } else if (freq > element.fc){\r\n                  return Math.min(2,element.sigma1[index] < element.sigma3[index] ? element.sigma1[index] : element.sigma3[index])\r\n              } else {return Math.min(2,element.sigma3[index])}\r\n          } else {\r\n              var sigma0 = undefined\r\n              if (freq>=element.fc){\r\n                  sigma0 = element.sigma1[index]\r\n              } else {\r\n                  var Y = Math.sqrt(freq/element.fc)\r\n                  var S1 = ((1-Math.pow(Y,2))*Math.log((1+Y)/(1-Y))+2*Y)/(4*Math.pow(Math.PI,2)*Math.pow(1-Y*Y,1.5))\r\n                  var S2 = freq <= element.fc/2 ? (8*Math.pow(c0,2)*(1-2*Math.pow(Y,2)))/(Math.pow(element.fc,2)*Math.pow(Math.PI,4)*element.l1*element.l2*Y*Math.sqrt(1-Math.pow(Y,2))) : 0\r\n                  sigma0 = (2*(element.l1+element.l2)*c0*S1)/(element.l1*element.l2*element.fc)+S2\r\n              }\r\n              if (freq<element.f11 && element.f11<element.fc/2 && sigma0>element.sigma2[index]) {return Math.min(2,element.sigma2[index])} else {return Math.min(2,sigma0)};\r\n          }\r\n      })}\r\n\r\n    elementsigmaf = (element) => {return freq.map((freq)=>{\r\n        var k0 = (2*Math.PI*freq)/c0;\r\n        var A = -0.964-(0.5+(element.l2/(Math.PI*element.l1)))*Math.log(element.l2/element.l1)+((5*element.l2)/(2*Math.PI*element.l1))-(1/(4*Math.PI*element.l1*element.l2*Math.pow(k0,2)));\r\n        var sigmaf = 0.5*(Math.log(k0*Math.sqrt(element.l1*element.l2))-A);\r\n        return Math.min(sigmaf,2);\r\n    })}\r\n    \r\n    elementQui = (element) => {return Math.sqrt(31.1/element.fc)}\r\n    \r\n    elementPsi = (element) => {return 44.3*element.fc/element.smass}\r\n    \r\n    elementAlpha = (element) => {return (1/3)*Math.pow((2*Math.sqrt(element.Qui*element.Psi)*(1+element.Qui)*(1+element.Psi))/(element.Qui*Math.pow(1+element.Psi,2)+2*element.Psi*(1+Math.pow(element.Qui,2))),2)}\r\n    \r\n    elementAlphaK = (element) => {return element.Alpha*(1-0.9999*element.Alpha)}\r\n    \r\n    elementntotlab = (element) => {return freq.map((freq,index)=>{return element.nint+((2*p0*c0*element.sigma[index])/(2*Math.PI*freq*element.smass))+(c0/(Math.pow(Math.PI,2)*element.Si*Math.sqrt(freq*element.fc)))*(2*(element.l1+element.l2)*element.AlphaK)})}\r\n\r\n    elementTs = (ntot) =>{\r\n        return freq.map((freq,index)=>{return 2.2/(freq*ntot[index])})\r\n    }\r\n\r\n    elementR = (element,ntot) => {return freq.map((freq,index)=>{\r\n        var t1 = Math.pow((2*p0*c0)/(2*Math.PI*freq*element.smass),2);\r\n        var tplat = Math.pow((4*p0*c0)/(1.1*element.density*element.cl),2)*(0.02/ntot[index])\r\n        var tt = ''\r\n        if (freq>element.fc/1.12 && freq<1.12*element.fc)\r\n            {tt = t1*((Math.PI*Math.pow(element.sigma[index],2))/(2*ntot[index]));\r\n        } else if (freq>element.fc){\r\n            tt = t1*((Math.PI*element.fc*Math.pow(element.sigma[index],2))/(2*freq*ntot[index]));\r\n        } else if (freq<element.fc){\r\n            tt = t1*(2*element.sigmaf[index]*Math.pow(1-((Math.pow(freq,2))/Math.pow(element.fc,2)),-2)+((2*Math.PI*element.fc*Math.pow(element.sigma[index],2))/(4*freq*ntot[index])));\r\n        }\r\n\r\n        return Math.min(-10*log10(tt),-10*log10(tplat))\r\n    })}\r\n\r\n    elementL = (element,ts) =>{return freq.map((freq,index)=>{\r\n        return 155-(30*log10(element.smass))+(10*log10(ts[index]))+(10*log10(element.sigma[index]))+(10*log10(freq/fref))\r\n    })}\r\n\r\n    elementLs = (element) => {return freq.map((freq,index)=>{return element.Llab[index] + log10(element.Tssitu[index]/element.tslab[index])})}\r\n\r\n    elementRs = (element) => {return freq.map((freq,index)=>{return element.Rlab[index] - log10(element.Tssitu[index]/element.tslab[index])})}\r\n\r\n    elementsigmaf = (element) => {return freq.map((freq)=>{\r\n    var k0 = (2*Math.PI*freq)/c0;\r\n    var A = -0.964-(0.5+(element.l2/(Math.PI*element.l1)))*Math.log(element.l2/element.l1)+((5*element.l2)/(2*Math.PI*element.l1))-(1/(4*Math.PI*element.l1*element.l2*Math.pow(k0,2)));\r\n    var sigmaf = 0.5*(Math.log(k0*Math.sqrt(element.l1*element.l2))-A);\r\n    return Math.min(sigmaf,2);\r\n    })}\r\n\r\n    elementQui = (element) => {return Math.sqrt(31.1/element.fc)}\r\n\r\n    elementPsi = (element) => {return 44.3*element.fc/element.smass}\r\n\r\n    elementAlpha = (element) => {return (1/3)*Math.pow((2*Math.sqrt(element.Qui*element.Psi)*(1+element.Qui)*(1+element.Psi))/(element.Qui*Math.pow(1+element.Psi,2)+2*element.Psi*(1+Math.pow(element.Qui,2))),2)}\r\n\r\n    elementAlphaK = (element) => {return element.Alpha*(1-0.9999*element.Alpha)}\r\n\r\n    elementntotlab = (element) => {return freq.map((freq,index)=>{return element.nint+((2*p0*c0*element.sigma[index])/(2*Math.PI*freq*element.smass))+(c0/(Math.pow(Math.PI,2)*element.Si*Math.sqrt(freq*element.fc)))*(2*(element.l1+element.l2)*element.AlphaK)})}\r\n\r\n    elementEaklk = (side) => {switch (side){\r\n//----------------------------------------------------------------------------------------------------------------------------//\r\n\r\n        case \"e\":\r\n        return this.state.junction_a.aklk[0] + this.state.junction_b.aklk[0] + this.state.junction_c.aklk[0] + this.state.junction_d.aklk[0];\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------//\r\n                                                                \r\n        case \"a_psup\":\r\n        return 2*this.state.junction_a.aklk[1] + this.state.junction_1.aklk[1] + this.state.junction_4.aklk[1];                                                                                                 \r\n                                                                \r\n        case \"b_psup\":\r\n        return 2*this.state.junction_b.aklk[1] + this.state.junction_1.aklk[1] + this.state.junction_2.aklk[1];                                                                                 \r\n                                                        \r\n        case \"c_psup\":  \r\n        return 2*this.state.junction_c.aklk[1] + this.state.junction_2.aklk[1] + this.state.junction_3.aklk[1];                                       \t                                    \r\n                                                        \r\n        case \"d_psup\":   \r\n        return 2*this.state.junction_d.aklk[1] + this.state.junction_3.aklk[1] + this.state.junction_4.aklk[1];\t\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------//\r\n\r\n        case \"a_pinf\":\r\n        return 2*this.state.junction_a.aklk[1] + this.state.junction_5.aklk[1] + this.state.junction_8.aklk[1];                                                                                                 \r\n                                                                \r\n        case \"b_pinf\":\r\n        return 2*this.state.junction_b.aklk[1] + this.state.junction_5.aklk[1] + this.state.junction_6.aklk[1];                                                                                 \r\n                                                        \r\n        case \"c_pinf\":  \r\n        return 2*this.state.junction_c.aklk[1] + this.state.junction_6.aklk[1] + this.state.junction_7.aklk[1];                                       \t                                    \r\n                                                        \r\n        case \"d_pinf\":   \r\n        return 2*this.state.junction_d.aklk[1] + this.state.junction_7.aklk[1] + this.state.junction_8.aklk[1];\r\n\r\n //----------------------------------------------------------------------------------------------------------------------------//       \r\n        default:\r\n        return console.log(\"elementEaklk error side: \" + side)\r\n\r\n        }\r\n    }\r\n\r\n    elementntotsitu = (element) => {\r\n        return freq.map((freq,index) => {return element.nint+((2*p0*c0*element.sigma[index])/(2*Math.PI*freq*element.smass))+(c0/(Math.pow(Math.PI,2)*element.Si*Math.sqrt(freq*element.fc)))*(element.Eaklk)})\r\n    }\r\n\r\n    elementAi = (element,ts) => {\r\n        return freq.map((freq,index) => {return ((2.2*Math.pow(Math.PI,2)*element.Si)/(c0*ts[index]))*Math.sqrt(1000/freq)} )\r\n    }\r\n\r\n    floatfc = (element) => {return 160*Math.sqrt(element.ym/element.smass) || 10000000000}\r\n\r\n    floatd = (element) => { switch (element.tp){\r\n        case 'sand':\r\n        return freq.map(freq => {return Math.max(30*log10(freq/element.fc),0)})\r\n        \r\n        case 'asphalt':\r\n        return freq.map(freq => {return Math.max(40*log10(freq/element.fc),0)})\r\n        }\r\n    }\r\n\r\n    junctionrmass = (element,junction) => {\r\n\r\n        var junction_type = junction.type\r\n        var psup = junction.psup\r\n        var pinf = junction.pinf\r\n        var padc = junction.padc\r\n\r\n        \r\n            switch (junction_type){\r\n                case \"T\":\r\n                    var rmass13 = log10((element.smass/((psup.smass+pinf.smass)/2))); \t     // usado no k13\r\n                    var rmass12 = log10(element.smass/psup.smass); \t\t\t\t\t\t\t// usado no k12//21\r\n                    var rmass23 = log10(element.smass/pinf.smass);\t\t\t\t\t\t\t// usado no k23\r\n                return [rmass13, rmass12, rmass23];\r\n\r\n                case \"T2\":\r\n                    var rmass13 = log10((((psup.smass+pinf.smass)/2)/element.smass)); \t     // usado no k13\r\n                    var rmass12 = log10(psup.smass/element.smass); \t\t\t\t\t\t\t// usado no k12//21\r\n                    var rmass23 = log10(pinf.smass/element.smass);\t\t\t\t\t\t\t// usado no k23\r\n                return [rmass13, rmass12, rmass23];\r\n                \r\n                case \"X\":\r\n                    var m13 = (element.smass+padc.smass)/2;\r\n                    var m24 = (psup.smass+pinf.smass)/2;\r\n                return [log10(m24/m13),log10(m13/m24)];\t\t\t\t\t//rmass13, 24\t\t\t\t\t\t// [usar para piso, usar para parede]\r\n                \r\n                default:\r\n                return log10(psup.smass/element.smass); // CRIAR CONDIÇÕES PARA JUNÇÕES L E G\r\n            }\r\n\r\n    }\r\n\r\n    junctionkij = (junction) =>{\r\n        var junction_type = junction.type\r\n        var rmass = junction.rmass\r\n        var k12 = 0\r\n        var k13 = 0\r\n        var k23 = 0\r\n\r\n    ////////////// INSIERIR IF PARA CONEXÕES RÍGIDAS OU FLEXIVEIS\r\n        switch (junction_type){\r\n            case \"T\":\r\n                    k13 = 5.7 + 14.1 * rmass[0] + 5.7 * Math.pow(rmass[0],2); \t    //0\r\n            /*k21*/\tk12 = 5.7 + 5.7 * Math.pow(rmass[1],2);\t\t\t\t\t\t\t//1\r\n                    k23 = 5.7 + 5.7 * Math.pow(rmass[2],2);\t\t\t\t\t\t\t//2\r\n            return [k12, k13, k23];//colocar o k23 se for preciso\r\n\r\n            case \"T2\":\r\n                    k13 = 5.7 + 14.1 * rmass[0] + 5.7 * Math.pow(rmass[0],2); \t    //0\r\n            /*k21*/\tk12 = 5.7 + 5.7 * Math.pow(rmass[1],2);\t\t\t\t\t\t\t//1\r\n                    k23 = 5.7 + 5.7 * Math.pow(rmass[2],2);\t\t\t\t\t\t\t//2\r\n            return [k12, k13, k23];//colocar o k23 se for preciso\r\n            \r\n            case \"X\":\r\n            //analisando o piso\r\n            /*k14*/\tk12 = 8.7 + 5.7 * Math.pow(rmass[0],2);\t\t\t\t\t\t\t//0\r\n                    k13 = 8.7 + 17.1 * rmass[0] + 5.7 * Math.pow(rmass[0],2);\t    //1\r\n            //analisando a parede\t\t\r\n                    var k42 = 8.7 + 17.1 * rmass[1] + 5.7 * Math.pow(rmass[1],2);\t    //2\t\t\t\t\t\r\n            /*k12*/\tvar k41 = 8.7 + 5.7 * Math.pow(rmass[1],2);\t\t\t\t\t\t\t//3\r\n            return [k12, k13, k42, k41];\r\n            \r\n            case \"L\":\r\n                    var k12 = Math.max(15 * Math.abs(rmass) - 3,-2);\r\n            return [k12];\r\n            \r\n            case \"G\":\r\n                    var k12 = 5 * Math.pow(rmass,2) - 5;\r\n            return [k12];\r\n            default:\r\n            return [undefined]\r\n        }\r\n    }\r\n\r\n    junctionalphak = (element,junction) => {\r\n        var junction_type = junction.type\r\n        var psup = junction.psup\r\n        var pinf = junction.pinf\r\n        //var padc = junction.padc\r\n        var kij = junction.kij\r\n        var v=0;\r\n        var u=0;\r\n        switch (junction_type){\r\n            case \"T\":\r\n            //piso\r\n                v+=Math.sqrt(psup.fc/fref)*Math.pow(10,-kij[0]/10);  \t        //k21\r\n                v+=Math.sqrt(pinf.fc/fref)*Math.pow(10,-kij[2]/10);\t\t        //k23\r\n            //parede\r\n                u+=Math.sqrt(element.fc/fref)*Math.pow(10,-kij[0]/10);\t\t    //k12\r\n                u+=Math.sqrt(psup.fc/fref)*Math.pow(10,-kij[1]/10);\t\t        //k13\r\n            return [v,u];\r\n\r\n            case \"T2\":\r\n            //piso\r\n                v+=Math.sqrt(psup.fc/fref)*Math.pow(10,-kij[0]/10);  \t        //k21\r\n                v+=Math.sqrt(pinf.fc/fref)*Math.pow(10,-kij[2]/10);\t\t        //k23\r\n            //parede\r\n                u+=Math.sqrt(psup.fc/fref)*Math.pow(10,-kij[0]/10);\t\t    //k12\r\n                u+=Math.sqrt(element.fc/fref)*Math.pow(10,-kij[1]/10);\t\t        //k13\r\n            return [v,u];\r\n            \r\n            case \"X\":\r\n            //piso\r\n                v+=Math.sqrt(pinf.fc/fref)*Math.pow(10,-kij[0]/10);\t\t        //k12 [m1,m2,m3,m4]\r\n                v+=Math.sqrt(element.fc/fref)*Math.pow(10,-kij[1]/10);\t\t    //k13\r\n                v+=Math.sqrt(psup.fc/fref)*Math.pow(10,-kij[0]/10);\t\t        //k14\r\n                \r\n            //parede\r\n                u+=Math.sqrt(pinf.fc/fref)*Math.pow(10,-kij[2]/10);\t\t        //k42\r\n                u+=Math.sqrt(element.fc/fref)*Math.pow(10,-kij[3]/10);\t\t    //k41\r\n                u+=Math.sqrt(pinf.fc/fref)*Math.pow(10,-kij[3]/10);\t\t        //k12\r\n            return [v,u];\r\n            \r\n            default:\r\n                v=Math.sqrt(psup.fc/fref)*Math.pow(10,-kij/10); //quando as paredes do L forem diferentes???\r\n                u=Math.sqrt(element.fc/fref)*Math.pow(10,-kij/10);\r\n            return [v,u];\r\n        }\r\n    }\r\n\r\n    junctionlengthk = (element, junction, x) => {\r\n        var psup = junction.psup\r\n        if (x === 'n') { return psup.y }                                     // para junções das paredes (1,2,3,4)\r\n        if (x === 'i') { return element.x === psup.x ? element.x : element.y }  // para junções com piso (1,2,3,4)\r\n\r\n    }\r\n\r\n    junctionaklk = (junction) => {return junction.alphak.map(ak => {return ak * junction.lengthk})}\r\n\r\n    doCalcPartOne = () =>{\r\n        var sides = ['a','b','c','d']\r\n        var parts = ['psup','pinf','padc']\r\n        var side_root = ''\r\n        var side_x_part = ''\r\n        var junction_x = ''\r\n        var {floor} = this.state\r\n\r\n        sides.map(e =>{\r\n            side_root = 'side_' + e + '_'\r\n            junction_x = 'junction_' + e\r\n                parts.map(p => {\r\n                    side_x_part = side_root + p\r\n\r\n                        this.state[side_x_part].l1 = this.elementl1(this.state[side_x_part])\r\n                        this.state[side_x_part].l2 = this.elementl2(this.state[side_x_part])\r\n                        this.state[side_x_part].Si = this.elementSi(this.state[side_x_part])\r\n                        this.state[side_x_part].smass = this.elementsmass(this.state[side_x_part])\r\n                        this.state[side_x_part].fc = this.elementfc(this.state[side_x_part])\r\n                        this.state[side_x_part].f11 = this.elementf11(this.state[side_x_part])\r\n                        this.state[side_x_part].sigma1 = this.elementsigma1(this.state[side_x_part])\r\n                        this.state[side_x_part].sigma2 = this.elementsigma2(this.state[side_x_part])\r\n                        this.state[side_x_part].sigma3 = this.elementsigma3(this.state[side_x_part])\r\n                        this.state[side_x_part].sigma = this.elementsigma(this.state[side_x_part])\r\n                        this.state[side_x_part].sigmaf = this.elementsigmaf(this.state[side_x_part])\r\n                        this.state[side_x_part].Qui = this.elementQui(this.state[side_x_part])\r\n                        this.state[side_x_part].Psi = this.elementPsi(this.state[side_x_part])\r\n                        this.state[side_x_part].Alpha = this.elementAlpha(this.state[side_x_part])\r\n                        this.state[side_x_part].AlphaK = this.elementAlphaK(this.state[side_x_part])\r\n                        this.state[side_x_part].ntotlab = this.elementntotlab(this.state[side_x_part])\r\n                        this.state[side_x_part].tslab = this.elementTs(this.state[side_x_part].ntotlab)\r\n                        this.state[side_x_part].Rlab = this.elementR(this.state[side_x_part],this.state[side_x_part].ntotlab)\r\n\r\n                        this.state[junction_x][p] = this.state[side_x_part]                  \r\n\r\n                })\r\n        })\r\n    }\r\n\r\n    doCalcPartTwo = () =>{\r\n        var sides = ['a','b','c','d']\r\n        var parts = ['psup','pinf','padc']\r\n        var side_root = ''\r\n        var side_x_part = ''\r\n        var junction_x = ''\r\n        var {floor} = this.state\r\n\r\n        sides.map(e =>{\r\n            side_root = 'side_' + e + '_'\r\n            junction_x = 'junction_' + e\r\n                parts.map(p => {\r\n                    side_x_part = side_root + p\r\n\r\n                        this.state[junction_x].rmass = this.junctionrmass(floor,this.state[junction_x])\r\n                        this.state[junction_x].kij = this.junctionkij(this.state[junction_x])\r\n                        this.state[junction_x].alphak = this.junctionalphak(floor,this.state[junction_x])\r\n                        this.state[junction_x].lengthk = this.junctionlengthk(floor,this.state[junction_x],'i')\r\n                        this.state[junction_x].aklk = this.junctionaklk(this.state[junction_x])\r\n\r\n                })\r\n        })\r\n    }\r\n\r\n    doCalcPartOneHalfSup = () => {\r\n        //pode adaptar para pinf e padc\r\n        var sides = [1,2,3,4]\r\n        var letter = ['a','b','c','d']\r\n        var parts = ['psup']//,'pinf','padc']\r\n        var side_root = ''\r\n        //var side_x_part = ''\r\n        var junction_x = ''\r\n\r\n        sides.map((e,index)=>{\r\n            junction_x = \"junction_\" + e\r\n            var n = 0\r\n            if (index < letter.length-1) {n = index+1} else {n = index-3}\r\n            this.state[junction_x]['psup'] = this.state['side_' + letter[n] + \"_psup\"]\r\n            this.state[junction_x]['pinf'] = this.state['side_' + letter[n] + \"_psup\"]\r\n            this.state[junction_x]['padc'] = this.state['side_' + letter[index] + \"_psup\"]\r\n\r\n        })\r\n\r\n    }\r\n\r\n    doCalcPartOneHalfInf = () => {\r\n        //pode adaptar para pinf e padc\r\n        var sides = [5,6,7,8]\r\n        var letter = ['a','b','c','d']\r\n        var parts = ['pinf']//,'pinf','padc']\r\n        var side_root = ''\r\n        //var side_x_part = ''\r\n        var junction_x = ''\r\n\r\n        sides.map((e,index)=>{\r\n            junction_x = \"junction_\" + e\r\n            var n = 0\r\n            if (index < letter.length-1) {n = index+1} else {n = index-3}\r\n            this.state[junction_x]['psup'] = this.state['side_' + letter[n] + \"_pinf\"]\r\n            this.state[junction_x]['pinf'] = this.state['side_' + letter[n] + \"_pinf\"]\r\n            this.state[junction_x]['padc'] = this.state['side_' + letter[index] + \"_pinf\"]\r\n\r\n        })\r\n\r\n    }\r\n\r\n    doCalcPartTwoHalfSup = () => {\r\n        //pode adaptar para pinf e padc\r\n        var sides = [1,2,3,4]\r\n        var letter = ['a','b','c','d']\r\n        var parts = ['psup']//,'pinf','padc']\r\n        var side_root = ''\r\n        //var side_x_part = ''\r\n        var junction_x = ''\r\n        var {floor} = this.state\r\n        var sidetxt = ''\r\n\r\n        sides.map((e,index)=>{\r\n            junction_x = \"junction_\" + e\r\n            sidetxt = \"side_\" + letter[index] + \"_psup\"\r\n\r\n\r\n            this.state[junction_x].rmass = this.junctionrmass(this.state[sidetxt],this.state[junction_x])\r\n            this.state[junction_x].kij = this.junctionkij(this.state[junction_x])\r\n            this.state[junction_x].alphak = this.junctionalphak(this.state[sidetxt],this.state[junction_x])\r\n            this.state[junction_x].lengthk = this.junctionlengthk(this.state[sidetxt],this.state[junction_x],'n')\r\n            this.state[junction_x].aklk = this.junctionaklk(this.state[junction_x])\r\n\r\n        })\r\n\r\n    }\r\n\r\n    doCalcPartTwoHalfInf = () => {\r\n        //pode adaptar para pinf e padc\r\n        var sides = [5,6,7,8]\r\n        var letter = ['a','b','c','d']\r\n        var parts = ['pinf']//,'pinf','padc']\r\n        var side_root = ''\r\n        //var side_x_part = ''\r\n        var junction_x = ''\r\n        var {floor} = this.state\r\n        var sidetxt = ''\r\n\r\n        sides.map((e,index)=>{\r\n            junction_x = \"junction_\" + e\r\n            sidetxt = \"side_\" + letter[index] + \"_pinf\"\r\n\r\n\r\n            this.state[junction_x].rmass = this.junctionrmass(this.state[sidetxt],this.state[junction_x])\r\n            this.state[junction_x].kij = this.junctionkij(this.state[junction_x])\r\n            this.state[junction_x].alphak = this.junctionalphak(this.state[sidetxt],this.state[junction_x])\r\n            this.state[junction_x].lengthk = this.junctionlengthk(this.state[sidetxt],this.state[junction_x],'n')\r\n            this.state[junction_x].aklk = this.junctionaklk(this.state[junction_x])\r\n\r\n        })\r\n\r\n    }\r\n\r\n    doCalcPartThree = () => {\r\n        var sides = ['a','b','c','d']\r\n        var parts = ['psup','pinf']//,'padc']\r\n        var side_root = ''\r\n        var side_x_part = ''\r\n        var junction_x = ''\r\n        var {floor} = this.state\r\n\r\n        sides.map(e =>{\r\n            side_root = 'side_' + e + '_'\r\n            junction_x = 'junction_' + e\r\n                parts.map(p => {\r\n                    side_x_part = side_root + p\r\n\r\n                    this.state[side_x_part].Eaklk = this.elementEaklk(e + \"_\" + p)\r\n                    this.state[side_x_part].ntotsitu = this.elementntotsitu(this.state[side_x_part])\r\n                    this.state[side_x_part].Rsitu = this.elementR(this.state[side_x_part],this.state[side_x_part].ntotsitu)\r\n                    this.state[side_x_part].Tssitu = this.elementTs(this.state[side_x_part].ntotsitu)\r\n                    this.state[side_x_part].Aisitu = this.elementAi(this.state[side_x_part],this.state[side_x_part].Tssitu)                 \r\n\r\n                })\r\n        })\r\n    }\r\n\r\n    doCalcPartFour = () =>{\r\n        var sides = ['a','b','c','d']\r\n        var flank_x = ''\r\n        var junction_x = ''\r\n        var {floor} = this.state\r\n\r\n        sides.map(side => {\r\n            flank_x = 'flank_' + side\r\n            junction_x = 'junction_' + side\r\n                \r\n                    this.state[flank_x].type = this.state[junction_x].type\r\n                    this.state[flank_x].kij = this.state[junction_x].kij\r\n                    this.state[flank_x].lij = this.state[junction_x].lengthk\r\n                    this.state[flank_x].Afloor = floor.Aisitu\r\n                    this.state[flank_x].Apsup = this.state[junction_x]['psup']['Aisitu']\r\n                    this.state[flank_x].Apinf = this.state[junction_x]['pinf']['Aisitu']\r\n\r\n                    this.state[flank_x].Lsitu = floor.Lsitu\r\n                    //this.state[flank_x].Ls = floor.Ls\r\n                    this.state[flank_x].Rfloor = floor.Rsitu\r\n                    //this.state[flank_x].Ri = floor.Rs\r\n                    this.state[flank_x].Rpsup = this.state[junction_x]['psup']['Rsitu']\r\n                    this.state[flank_x].Rpinf = this.state[junction_x]['pinf']['Rsitu']\r\n                    this.state[flank_x].Sfloor = floor.Si\r\n                    this.state[flank_x].Spsup = this.state[junction_x]['psup']['Si']\r\n                    this.state[flank_x].Spinf = this.state[junction_x]['pinf']['Si']\r\n                    this.state[flank_x].dLsitu = this.state.float.d\r\n\r\n            \r\n        })\r\n    }\r\n\r\n    flankDvsitu = (flank) => {\r\n        var kij = flank.kij\r\n        var lij = flank.lij\r\n        var Afloor = flank.Afloor\r\n        var Apsup = flank.Apsup\r\n        var Apinf = flank.Apinf\r\n        var Ai = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\r\n        var Aj = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\r\n\r\n        return freq.map((freq,index) => { return kij.map((kij,idx) => {\r\n            switch (idx) {\r\n                case 0:\r\n                    if (flank.type === \"T\") {\r\n                        Ai = Apsup\r\n                        Aj = Afloor\r\n                    }\r\n                    if (flank.type === \"X\") {\r\n                        Ai = Afloor\r\n                        Aj = Apinf\r\n                    }           \r\n                    break;\r\n\r\n                case 1:\r\n                    if (flank.type === \"T\") {\r\n                        Ai = Apsup\r\n                        Aj = Apinf\r\n                    }\r\n                    if (flank.type === \"X\") {\r\n                        Ai = Afloor\r\n                        Aj = Afloor // Apadc mas n usa esse aqui então tá de boas\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    if (flank.type === \"T\") {\r\n                        Ai = Afloor\r\n                        Aj = Apinf\r\n                    }\r\n                    if (flank.type === \"X\") {\r\n                        Ai = Apsup\r\n                        Aj = Apinf\r\n                    }\r\n                    break;\r\n\r\n                case 3:\r\n                    if (flank.type === \"X\") {\r\n                        Ai = Apsup\r\n                        Aj = Afloor\r\n                    }\r\n                    break;\r\n            \r\n                default:\r\n                    Ai = Afloor\r\n                    Aj = Apinf\r\n                    break;\r\n            }\r\n            return Math.max(0,kij-10*log10(lij/Math.sqrt(Ai[index]*Aj[index])))       // EQ 7\r\n        })}) \r\n    }\r\n\r\n    flankLnd = (flank) => {\r\n        var Lsitu = flank.Lsitu  //\r\n        var dLsitu = flank.dLsitu  // float\r\n        var dLdsitu = [0] // camada adicional ΔLd,situ configurar no futuro\r\n\r\n        return Lsitu.map((Lsitu,index) => {\r\n            return Lsitu - dLsitu[index] - dLdsitu[0] // EQ 11 (PARTE 2)\r\n        })\r\n\r\n    }\r\n\r\n    flankRd = (flank) => {\r\n        var Rsitu = flank.Rsitu\r\n        var dRsitu = flank.dLsitu // esse aqui é recomendação da norma em usar a camada do piso flutuante. a norma diz q é grosseira\r\n        var dRdsitu = [0] // camada adicional ΔRd,situ configurar no futuro\r\n\r\n        return Rsitu.map((Rsitu,index) => {\r\n            return Rsitu + dRsitu[index] + dRdsitu[0] // EQ 14 (PARTE 1)\r\n        })\r\n    }\r\n\r\n    flankLnij = (flank) => {\r\n        var Lsitu = flank.Lsitu   //\r\n        var dLsitu = flank.dLsitu   //\r\n        var Ri = flank.Rfloor          //\r\n        var Rj = flank.Rpinf           //\r\n        var Si = flank.Sfloor          //\r\n        var Sj = flank.Spinf           //\r\n        var Dvsitu = flank.Dvsitu   // \r\n        var dRjsitu = [0]            // ΔRj,situ\r\n\r\n        return Dvsitu.map((Dv,index) => {\r\n            return Dv.map((Dij,idx) => {\r\n                return Lsitu[index] - dLsitu[index] + ((Ri[index]-Rj[index])/2) - dRjsitu[0] - Dij - (10*log10(Math.sqrt(Si/Sj))) //EQ 12 (PARTE 2)\r\n            })\r\n        })\r\n\r\n    }\r\n \r\n    flankRij = (flank) => {\r\n        var Rfloor = flank.Rfloor\r\n        var Rpsup = flank.Rpsup\r\n        var Rpinf = flank.Rpinf\r\n        var Sfloor = flank.Sfloor\r\n        var Spsup = flank.Spsup\r\n        var Spinf = flank.Spinf\r\n        var Ss = flank.Sfloor       // 10 para diagonal criar condicional, mas antes entender o q é né camarada\r\n        var Ri = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]          //\r\n        var Rj = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]          //\r\n        var Si = 0           //\r\n        var Sj = 0           //\r\n        var Dvsitu = flank.Dvsitu   // \r\n       // var dRisitu = [0]            // ΔRi,situ\r\n        var dRjsitu = [0]            // ΔRi,situ            \r\n        var dRisitu = ''\r\n\r\n        return Dvsitu.map((Dv,index) => {\r\n            return Dv.map((Dij,idx) => {\r\n                                            \r\n                switch (idx) {\r\n                    case 0: // da pra aprimorar com psup, pinf e padc\r\n                        if (flank.type === \"T\") {\r\n                            dRisitu = 0\r\n                            Ri = Rpsup\r\n                            Rj = Rfloor\r\n                            Si = Spsup\r\n                            Sj = Sfloor\r\n                        } else\r\n                        if (flank.type === \"X\") {\r\n                            dRisitu = 0\r\n                            Ri = Rfloor\r\n                            Rj = Rpinf\r\n                            Si = Sfloor\r\n                            Sj = Spinf\r\n                        } else {dRisitu = 10000000000}\r\n                        break;\r\n\r\n                    case 1:\r\n                        if (flank.type === \"T\") {\r\n                            dRisitu = 0\r\n                            Ri = Rpsup\r\n                            Rj = Rpinf\r\n                            Si = Spsup\r\n                            Sj = Spinf\r\n                        } else\r\n                        if (flank.type === \"X\") {\r\n                            dRisitu = flank.dLsitu[index]\r\n                            Ri = Rfloor\r\n                            Rj = Rfloor\r\n                            Si = Sfloor\r\n                            Sj = Sfloor /// no J na vdd é padc mas n usa esse aqui (por enquanto...)\r\n                        } else {dRisitu = 10000000000}\r\n                        break;\r\n\r\n                    case 2:\r\n                        if (flank.type === \"T\") {\r\n                            dRisitu = flank.dLsitu[index]\r\n                            Ri = Rfloor\r\n                            Rj = Rpinf\r\n                            Si = Sfloor\r\n                            Sj = Spinf\r\n                        } else\r\n                        if (flank.type === \"X\") {\r\n                            dRisitu = 0\r\n                            Ri = Rpsup\r\n                            Rj = Rpinf\r\n                            Si = Spsup\r\n                            Sj = Spinf\r\n                        } else {dRisitu = 10000000000}\r\n                        break;\r\n\r\n                    case 3:\r\n                        if (flank.type === \"X\") {\r\n                            dRisitu = flank.dLsitu[index]\r\n                            Ri = Rpsup\r\n                            Rj = Rfloor\r\n                            Si = Spsup\r\n                            Sj = Sfloor\r\n                        } else {dRisitu = 10000000000}\r\n                        break;\r\n                \r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                return (Ri[index]/2) + (Rj[index]/2) + dRisitu + dRjsitu[0] + Dij + (10*log10(Ss/Math.sqrt(Si*Sj))) //EQ 15 (PARTE 1)\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    predictionL = () => {\r\n        var fe = this.state.flank_floor_floor.Lnd\r\n\r\n        //CONDICIONAL PARA X E T\r\n        var fa = this.state.flank_a.Lnijsitu.map((flank) => {return flank.filter((ff,i) => {if (this.state.flank_a.type === \"L\") {return i === 2} else {return i === 0}})})\r\n        var fb = this.state.flank_b.Lnijsitu.map((flank) => {return flank.filter((ff,i) => {if (this.state.flank_b.type === \"L\") {return i === 2} else {return i === 0}})})\r\n        var fc = this.state.flank_c.Lnijsitu.map((flank) => {return flank.filter((ff,i) => {if (this.state.flank_c.type === \"L\") {return i === 2} else {return i === 0}})})\r\n        var fd = this.state.flank_d.Lnijsitu.map((flank) => {return flank.filter((ff,i) => {if (this.state.flank_d.type === \"L\") {return i === 2} else {return i === 0}})})\r\n        var tau = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\r\n\r\n        fe.map((nn,index) => {\r\n            tau[index] += Math.pow(10,nn/10)\r\n        }) \r\n\r\n        fa.map((nn,index) => {\r\n            tau[index] += Math.pow(10,nn/10)\r\n        })\r\n\r\n        fb.map((nn,index) => {\r\n            tau[index] += Math.pow(10,nn/10)\r\n        })\r\n\r\n        fc.map((nn,index) => {\r\n            tau[index] += Math.pow(10,nn/10)\r\n        })\r\n\r\n        fd.map((nn,index) => {\r\n            tau[index] += Math.pow(10,nn/10)\r\n        })\r\n\r\n\r\n        //if (this.state.flank_floor_floor.kij === undefined) {tau = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n        if (this.state.flank_a.kij[0] === undefined) {tau = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n        if (this.state.flank_b.kij[0] === undefined) {tau = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n        if (this.state.flank_c.kij[0] === undefined) {tau = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n        if (this.state.flank_d.kij[0] === undefined) {tau = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n\r\n        return tau.map((nn,index) =>{\r\n            return 10*log10(nn)\r\n        })\r\n    }\r\n\r\n    predictionLnt = (L) => {\r\n        return L.map((L,index) => {return L - 10*log10(0.032*this.props.x*this.props.y*this.props.z2)})\r\n    }\r\n\r\n    predictionR = () => {\r\n        var fe = this.state.flank_floor_floor.Rd\r\n        //// ADICIONAR CONDICIONAL PARA X, T E L\r\n        var fa = this.state.flank_a.Rijsitu.map((flank) => {return flank.filter ((ff,i) => {if (this.state.flank_a.type === \"X\") {return i !== 1} else {return ff}})})\r\n        var fb = this.state.flank_b.Rijsitu.map((flank) => {return flank.filter ((ff,i) => {if (this.state.flank_b.type === \"X\") {return i !== 1} else {return ff}})})\r\n        var fc = this.state.flank_c.Rijsitu.map((flank) => {return flank.filter ((ff,i) => {if (this.state.flank_c.type === \"X\") {return i !== 1} else {return ff}})})\r\n        var fd = this.state.flank_d.Rijsitu.map((flank) => {return flank.filter ((ff,i) => {if (this.state.flank_d.type === \"X\") {return i !== 1} else {return ff}})})\r\n        var tau = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\r\n\r\n        fe.map((nn,index) => {\r\n            tau[index] += Math.pow(10,-nn/10)\r\n        }) \r\n\r\n        fa.map((nn,index) => {\r\n            \r\n            nn.map(ij => {\r\n                tau[index] += Math.pow(10,-ij/10)\r\n            })\r\n        })\r\n\r\n        fb.map((nn,index) => {\r\n            \r\n            nn.map(ij => {\r\n                tau[index] += Math.pow(10,-ij/10)\r\n            })\r\n        })\r\n\r\n        fc.map((nn,index) => {\r\n            \r\n            nn.map(ij => {\r\n                tau[index] += Math.pow(10,-ij/10)   \r\n            })\r\n        })\r\n\r\n        fd.map((nn,index) => {\r\n            \r\n            nn.map(ij => {\r\n                tau[index] += Math.pow(10,-ij/10)\r\n            })\r\n        })\r\n\r\n        //if (this.state.flank_floor_floor.kij === undefined) {tau = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n        if (this.state.flank_a.kij[0] === undefined) {tau = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n        if (this.state.flank_b.kij[0] === undefined) {tau = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n        if (this.state.flank_c.kij[0] === undefined) {tau = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n        if (this.state.flank_d.kij[0] === undefined) {tau = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n        \r\n        return tau.map((nn,index) =>{\r\n            return -10*log10(nn)\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        const {            \r\n\r\n            prediction,\r\n\r\n            floor, float,\r\n            side_a_psup, side_a_pinf, side_a_padc,\r\n            side_b_psup, side_b_pinf, side_b_padc,\r\n            side_c_psup, side_c_pinf, side_c_padc,\r\n            side_d_psup, side_d_pinf, side_d_padc,\r\n\r\n            junction_a, junction_b, junction_c, junction_d,\r\n            junction_1, junction_2, junction_3, junction_4,\r\n            junction_5, junction_6, junction_7, junction_8,\r\n\r\n            flank_a, flank_b, flank_c, flank_d, flank_floor_floor,\r\n        \r\n        } = this.state\r\n\r\n        floor.l1 = this.elementl1(floor)\r\n        floor.l2 = this.elementl2(floor)\r\n        floor.Si = this.elementSi(floor)\r\n        floor.smass = this.elementsmass(floor)\r\n        floor.fc = this.elementfc(floor)\r\n        floor.f11 = this.elementf11(floor)\r\n        floor.sigma1 = this.elementsigma1(floor)\r\n        floor.sigma2 = this.elementsigma2(floor)\r\n        floor.sigma3 = this.elementsigma3(floor)\r\n        floor.sigma = this.elementsigma(floor) \r\n        floor.sigmaf = this.elementsigmaf(floor)\r\n        floor.Qui = this.elementQui(floor)\r\n        floor.Psi = this.elementPsi(floor)\r\n        floor.Alpha = this.elementAlpha(floor)\r\n        floor.AlphaK = this.elementAlphaK(floor)\r\n        floor.ntotlab = this.elementntotlab(floor)\r\n        floor.tslab = this.elementTs(floor.ntotlab)\r\n        floor.Rlab = this.elementR(floor,floor.ntotlab)\r\n        floor.Llab = this.elementL(floor,floor.tslab)\r\n\r\n        float.smass = this.elementsmass(float)\r\n        float.fc = this.floatfc(float)\r\n        float.d = this.floatd(float)\r\n\r\n        this.doCalcPartOne()        //--------------\r\n        this.doCalcPartOneHalfSup() // coleta dados da junção\r\n        this.doCalcPartOneHalfInf() //--------------\r\n        this.doCalcPartTwo()        //________________\r\n        this.doCalcPartTwoHalfSup() // calcula dados da junção\r\n        this.doCalcPartTwoHalfInf() //________________\r\n\r\n        ////////////////////////\r\n\r\n        floor.Eaklk = this.elementEaklk('e')\r\n        floor.ntotsitu = this.elementntotsitu(floor)\r\n        floor.Rsitu = this.elementR(floor,floor.ntotsitu)\r\n        floor.Tssitu = this.elementTs(floor.ntotsitu)\r\n        floor.Lsitu = this.elementL(floor,floor.Tssitu)\r\n        floor.Aisitu = this.elementAi(floor,floor.Tssitu)\r\n        floor.Rs = this.elementRs(floor)\r\n        floor.Ls = this.elementLs(floor)\r\n\r\n        //// calc three com todos os sides e p's\r\n\r\n        this.doCalcPartThree() /// \r\n\r\n        this.doCalcPartFour() //// \r\n\r\n        flank_floor_floor.Lsitu = this.state.floor.Lsitu\r\n        flank_floor_floor.Rsitu = this.state.floor.Rsitu\r\n        flank_floor_floor.dLsitu = this.state.float.d\r\n        flank_floor_floor.Lnd = this.flankLnd(flank_floor_floor)\r\n        flank_floor_floor.Rd = this.flankRd(flank_floor_floor)\r\n\r\n        flank_a.Dvsitu = this.flankDvsitu(flank_a)\r\n        flank_a.Lnijsitu = this.flankLnij(flank_a)\r\n        flank_a.Rijsitu = this.flankRij(flank_a)\r\n\r\n        flank_b.Dvsitu = this.flankDvsitu(flank_b)\r\n        flank_b.Lnijsitu = this.flankLnij(flank_b)\r\n        flank_b.Rijsitu = this.flankRij(flank_b)\r\n\r\n        flank_c.Dvsitu = this.flankDvsitu(flank_c)\r\n        flank_c.Lnijsitu = this.flankLnij(flank_c)\r\n        flank_c.Rijsitu = this.flankRij(flank_c)\r\n\r\n        flank_d.Dvsitu = this.flankDvsitu(flank_d)\r\n        flank_d.Lnijsitu = this.flankLnij(flank_d)\r\n        flank_d.Rijsitu = this.flankRij(flank_d)\r\n\r\n        this.verifyStats()\r\n\r\n        prediction.R = this.predictionR()\r\n        prediction.L = this.predictionL()\r\n        prediction.LnT = this.predictionLnt(prediction.L)\r\n        tabajara(prediction.R,\"R'w\")\r\n        tabajara(prediction.L,\"Ln,w\")\r\n        tabajara(prediction.LnT,\"LnT,w\")\r\n\r\n        const string = JSON.stringify({prediction})\r\n\r\n        return (\r\n            <div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>cabeçalho</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>corpo</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n\r\n                {string}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BosmangCore;",{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":163,"column":1,"nodeType":"256","endLine":163,"endColumn":45},{"ruleId":"257","severity":1,"message":"258","line":13,"column":15,"nodeType":"259","messageId":"260","endLine":13,"endColumn":17},{"ruleId":"257","severity":1,"message":"261","line":17,"column":19,"nodeType":"259","messageId":"260","endLine":17,"endColumn":21},{"ruleId":"257","severity":1,"message":"258","line":27,"column":13,"nodeType":"259","messageId":"260","endLine":27,"endColumn":15},{"ruleId":"262","severity":1,"message":"263","line":36,"column":41,"nodeType":"259","messageId":"264","endLine":36,"endColumn":42},{"ruleId":"254","severity":1,"message":"255","line":40,"column":1,"nodeType":"256","endLine":40,"endColumn":50},{"ruleId":"265","severity":1,"message":"266","line":123,"column":9,"nodeType":"267","endLine":123,"endColumn":19},{"ruleId":"268","severity":1,"message":"269","line":136,"column":16,"nodeType":"270","messageId":"271","endLine":136,"endColumn":21},{"ruleId":"268","severity":1,"message":"272","line":136,"column":41,"nodeType":"270","messageId":"271","endLine":136,"endColumn":43},{"ruleId":"268","severity":1,"message":"273","line":136,"column":45,"nodeType":"270","messageId":"271","endLine":136,"endColumn":47},{"ruleId":"265","severity":1,"message":"266","line":227,"column":9,"nodeType":"267","endLine":227,"endColumn":19},{"ruleId":"268","severity":1,"message":"269","line":236,"column":16,"nodeType":"270","messageId":"271","endLine":236,"endColumn":21},{"ruleId":"268","severity":1,"message":"274","line":236,"column":45,"nodeType":"270","messageId":"271","endLine":236,"endColumn":47},{"ruleId":"268","severity":1,"message":"275","line":3,"column":8,"nodeType":"270","messageId":"271","endLine":3,"endColumn":24},{"ruleId":"250","replacedBy":"276"},{"ruleId":"252","replacedBy":"277"},{"ruleId":"265","severity":1,"message":"266","line":55,"column":17,"nodeType":"267","endLine":55,"endColumn":39},{"ruleId":"265","severity":1,"message":"266","line":58,"column":17,"nodeType":"267","endLine":58,"endColumn":39},{"ruleId":"265","severity":1,"message":"266","line":87,"column":21,"nodeType":"267","endLine":87,"endColumn":49},{"ruleId":"265","severity":1,"message":"266","line":92,"column":21,"nodeType":"267","endLine":92,"endColumn":49},{"ruleId":"265","severity":1,"message":"266","line":99,"column":21,"nodeType":"267","endLine":99,"endColumn":49},{"ruleId":"265","severity":1,"message":"266","line":104,"column":21,"nodeType":"267","endLine":104,"endColumn":49},{"ruleId":"265","severity":1,"message":"266","line":111,"column":21,"nodeType":"267","endLine":111,"endColumn":49},{"ruleId":"265","severity":1,"message":"266","line":117,"column":21,"nodeType":"267","endLine":117,"endColumn":49},{"ruleId":"265","severity":1,"message":"266","line":124,"column":21,"nodeType":"267","endLine":124,"endColumn":49},{"ruleId":"265","severity":1,"message":"266","line":129,"column":21,"nodeType":"267","endLine":129,"endColumn":49},{"ruleId":"265","severity":1,"message":"266","line":141,"column":21,"nodeType":"267","endLine":141,"endColumn":45},{"ruleId":"265","severity":1,"message":"266","line":145,"column":21,"nodeType":"267","endLine":145,"endColumn":45},{"ruleId":"265","severity":1,"message":"266","line":224,"column":19,"nodeType":"267","endLine":224,"endColumn":43},{"ruleId":"265","severity":1,"message":"266","line":225,"column":19,"nodeType":"267","endLine":225,"endColumn":43},{"ruleId":"265","severity":1,"message":"266","line":226,"column":19,"nodeType":"267","endLine":226,"endColumn":43},{"ruleId":"265","severity":1,"message":"266","line":233,"column":21,"nodeType":"267","endLine":233,"endColumn":45},{"ruleId":"265","severity":1,"message":"266","line":234,"column":21,"nodeType":"267","endLine":234,"endColumn":45},{"ruleId":"265","severity":1,"message":"266","line":235,"column":19,"nodeType":"267","endLine":235,"endColumn":43},{"ruleId":"265","severity":1,"message":"266","line":240,"column":17,"nodeType":"267","endLine":240,"endColumn":39},{"ruleId":"257","severity":1,"message":"258","line":38,"column":10,"nodeType":"259","messageId":"260","endLine":38,"endColumn":12},{"ruleId":"278","severity":1,"message":"279","line":42,"column":13,"nodeType":"270","messageId":"280","endLine":42,"endColumn":14},{"ruleId":"278","severity":1,"message":"279","line":52,"column":11,"nodeType":"270","messageId":"280","endLine":52,"endColumn":12},{"ruleId":"278","severity":1,"message":"281","line":53,"column":7,"nodeType":"270","messageId":"280","endLine":53,"endColumn":12},{"ruleId":"278","severity":1,"message":"279","line":56,"column":11,"nodeType":"270","messageId":"280","endLine":56,"endColumn":12},{"ruleId":"278","severity":1,"message":"282","line":57,"column":7,"nodeType":"270","messageId":"280","endLine":57,"endColumn":13},{"ruleId":"265","severity":1,"message":"266","line":294,"column":94,"nodeType":"267","endLine":294,"endColumn":112},{"ruleId":"265","severity":1,"message":"266","line":298,"column":94,"nodeType":"267","endLine":298,"endColumn":112},{"ruleId":"265","severity":1,"message":"266","line":302,"column":94,"nodeType":"267","endLine":302,"endColumn":112},{"ruleId":"265","severity":1,"message":"266","line":306,"column":94,"nodeType":"267","endLine":306,"endColumn":112},{"ruleId":"283","severity":1,"message":"284","line":452,"column":29,"nodeType":"285","messageId":"286","endLine":458,"endColumn":10},{"ruleId":"278","severity":1,"message":"287","line":477,"column":25,"nodeType":"270","messageId":"280","endLine":477,"endColumn":32},{"ruleId":"278","severity":1,"message":"288","line":478,"column":25,"nodeType":"270","messageId":"280","endLine":478,"endColumn":32},{"ruleId":"278","severity":1,"message":"289","line":479,"column":25,"nodeType":"270","messageId":"280","endLine":479,"endColumn":32},{"ruleId":"278","severity":1,"message":"290","line":524,"column":25,"nodeType":"270","messageId":"280","endLine":524,"endColumn":28},{"ruleId":"278","severity":1,"message":"290","line":528,"column":25,"nodeType":"270","messageId":"280","endLine":528,"endColumn":28},{"ruleId":"268","severity":1,"message":"291","line":596,"column":14,"nodeType":"270","messageId":"271","endLine":596,"endColumn":19},{"ruleId":"292","severity":1,"message":"293","line":598,"column":21,"nodeType":"294","messageId":"295","endLine":598,"endColumn":23},{"ruleId":"292","severity":1,"message":"293","line":601,"column":29,"nodeType":"294","messageId":"295","endLine":601,"endColumn":31},{"ruleId":"265","severity":1,"message":"266","line":604,"column":25,"nodeType":"267","endLine":604,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":605,"column":25,"nodeType":"267","endLine":605,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":606,"column":25,"nodeType":"267","endLine":606,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":607,"column":25,"nodeType":"267","endLine":607,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":608,"column":25,"nodeType":"267","endLine":608,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":609,"column":25,"nodeType":"267","endLine":609,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":610,"column":25,"nodeType":"267","endLine":610,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":611,"column":25,"nodeType":"267","endLine":611,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":612,"column":25,"nodeType":"267","endLine":612,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":613,"column":25,"nodeType":"267","endLine":613,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":614,"column":25,"nodeType":"267","endLine":614,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":615,"column":25,"nodeType":"267","endLine":615,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":616,"column":25,"nodeType":"267","endLine":616,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":617,"column":25,"nodeType":"267","endLine":617,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":618,"column":25,"nodeType":"267","endLine":618,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":619,"column":25,"nodeType":"267","endLine":619,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":620,"column":25,"nodeType":"267","endLine":620,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":621,"column":25,"nodeType":"267","endLine":621,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":623,"column":25,"nodeType":"267","endLine":623,"endColumn":47},{"ruleId":"292","severity":1,"message":"293","line":637,"column":21,"nodeType":"294","messageId":"295","endLine":637,"endColumn":23},{"ruleId":"292","severity":1,"message":"293","line":640,"column":29,"nodeType":"294","messageId":"295","endLine":640,"endColumn":31},{"ruleId":"268","severity":1,"message":"296","line":641,"column":21,"nodeType":"270","messageId":"271","endLine":641,"endColumn":32},{"ruleId":"265","severity":1,"message":"266","line":643,"column":25,"nodeType":"267","endLine":643,"endColumn":47},{"ruleId":"265","severity":1,"message":"266","line":644,"column":25,"nodeType":"267","endLine":644,"endColumn":47},{"ruleId":"265","severity":1,"message":"266","line":645,"column":25,"nodeType":"267","endLine":645,"endColumn":47},{"ruleId":"265","severity":1,"message":"266","line":646,"column":25,"nodeType":"267","endLine":646,"endColumn":47},{"ruleId":"265","severity":1,"message":"266","line":647,"column":25,"nodeType":"267","endLine":647,"endColumn":47},{"ruleId":"268","severity":1,"message":"297","line":657,"column":13,"nodeType":"270","messageId":"271","endLine":657,"endColumn":18},{"ruleId":"268","severity":1,"message":"298","line":658,"column":13,"nodeType":"270","messageId":"271","endLine":658,"endColumn":22},{"ruleId":"292","severity":1,"message":"293","line":662,"column":28,"nodeType":"294","messageId":"295","endLine":662,"endColumn":30},{"ruleId":"265","severity":1,"message":"266","line":666,"column":13,"nodeType":"267","endLine":666,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":667,"column":13,"nodeType":"267","endLine":667,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":668,"column":13,"nodeType":"267","endLine":668,"endColumn":35},{"ruleId":"268","severity":1,"message":"297","line":678,"column":13,"nodeType":"270","messageId":"271","endLine":678,"endColumn":18},{"ruleId":"268","severity":1,"message":"298","line":679,"column":13,"nodeType":"270","messageId":"271","endLine":679,"endColumn":22},{"ruleId":"292","severity":1,"message":"293","line":683,"column":28,"nodeType":"294","messageId":"295","endLine":683,"endColumn":30},{"ruleId":"265","severity":1,"message":"266","line":687,"column":13,"nodeType":"267","endLine":687,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":688,"column":13,"nodeType":"267","endLine":688,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":689,"column":13,"nodeType":"267","endLine":689,"endColumn":35},{"ruleId":"268","severity":1,"message":"297","line":699,"column":13,"nodeType":"270","messageId":"271","endLine":699,"endColumn":18},{"ruleId":"268","severity":1,"message":"298","line":700,"column":13,"nodeType":"270","messageId":"271","endLine":700,"endColumn":22},{"ruleId":"268","severity":1,"message":"291","line":703,"column":14,"nodeType":"270","messageId":"271","endLine":703,"endColumn":19},{"ruleId":"292","severity":1,"message":"293","line":706,"column":28,"nodeType":"294","messageId":"295","endLine":706,"endColumn":30},{"ruleId":"265","severity":1,"message":"266","line":711,"column":13,"nodeType":"267","endLine":711,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":712,"column":13,"nodeType":"267","endLine":712,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":713,"column":13,"nodeType":"267","endLine":713,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":714,"column":13,"nodeType":"267","endLine":714,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":715,"column":13,"nodeType":"267","endLine":715,"endColumn":35},{"ruleId":"268","severity":1,"message":"297","line":725,"column":13,"nodeType":"270","messageId":"271","endLine":725,"endColumn":18},{"ruleId":"268","severity":1,"message":"298","line":726,"column":13,"nodeType":"270","messageId":"271","endLine":726,"endColumn":22},{"ruleId":"268","severity":1,"message":"291","line":729,"column":14,"nodeType":"270","messageId":"271","endLine":729,"endColumn":19},{"ruleId":"292","severity":1,"message":"293","line":732,"column":28,"nodeType":"294","messageId":"295","endLine":732,"endColumn":30},{"ruleId":"265","severity":1,"message":"266","line":737,"column":13,"nodeType":"267","endLine":737,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":738,"column":13,"nodeType":"267","endLine":738,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":739,"column":13,"nodeType":"267","endLine":739,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":740,"column":13,"nodeType":"267","endLine":740,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":741,"column":13,"nodeType":"267","endLine":741,"endColumn":35},{"ruleId":"268","severity":1,"message":"291","line":753,"column":14,"nodeType":"270","messageId":"271","endLine":753,"endColumn":19},{"ruleId":"292","severity":1,"message":"293","line":755,"column":21,"nodeType":"294","messageId":"295","endLine":755,"endColumn":23},{"ruleId":"268","severity":1,"message":"299","line":757,"column":13,"nodeType":"270","messageId":"271","endLine":757,"endColumn":23},{"ruleId":"292","severity":1,"message":"293","line":758,"column":29,"nodeType":"294","messageId":"295","endLine":758,"endColumn":31},{"ruleId":"265","severity":1,"message":"266","line":761,"column":21,"nodeType":"267","endLine":761,"endColumn":44},{"ruleId":"265","severity":1,"message":"266","line":762,"column":21,"nodeType":"267","endLine":762,"endColumn":44},{"ruleId":"265","severity":1,"message":"266","line":763,"column":21,"nodeType":"267","endLine":763,"endColumn":44},{"ruleId":"265","severity":1,"message":"266","line":764,"column":21,"nodeType":"267","endLine":764,"endColumn":44},{"ruleId":"265","severity":1,"message":"266","line":765,"column":21,"nodeType":"267","endLine":765,"endColumn":44},{"ruleId":"292","severity":1,"message":"293","line":777,"column":24,"nodeType":"294","messageId":"295","endLine":777,"endColumn":26},{"ruleId":"265","severity":1,"message":"266","line":781,"column":21,"nodeType":"267","endLine":781,"endColumn":40},{"ruleId":"265","severity":1,"message":"266","line":782,"column":21,"nodeType":"267","endLine":782,"endColumn":40},{"ruleId":"265","severity":1,"message":"266","line":783,"column":21,"nodeType":"267","endLine":783,"endColumn":40},{"ruleId":"265","severity":1,"message":"266","line":784,"column":21,"nodeType":"267","endLine":784,"endColumn":40},{"ruleId":"265","severity":1,"message":"266","line":785,"column":21,"nodeType":"267","endLine":785,"endColumn":40},{"ruleId":"265","severity":1,"message":"266","line":786,"column":21,"nodeType":"267","endLine":786,"endColumn":40},{"ruleId":"265","severity":1,"message":"266","line":788,"column":21,"nodeType":"267","endLine":788,"endColumn":40},{"ruleId":"265","severity":1,"message":"266","line":790,"column":21,"nodeType":"267","endLine":790,"endColumn":40},{"ruleId":"265","severity":1,"message":"266","line":792,"column":21,"nodeType":"267","endLine":792,"endColumn":40},{"ruleId":"265","severity":1,"message":"266","line":793,"column":21,"nodeType":"267","endLine":793,"endColumn":40},{"ruleId":"265","severity":1,"message":"266","line":794,"column":21,"nodeType":"267","endLine":794,"endColumn":40},{"ruleId":"265","severity":1,"message":"266","line":795,"column":21,"nodeType":"267","endLine":795,"endColumn":40},{"ruleId":"265","severity":1,"message":"266","line":796,"column":21,"nodeType":"267","endLine":796,"endColumn":40},{"ruleId":"265","severity":1,"message":"266","line":797,"column":21,"nodeType":"267","endLine":797,"endColumn":40},{"ruleId":"292","severity":1,"message":"293","line":1004,"column":27,"nodeType":"294","messageId":"295","endLine":1004,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":1008,"column":27,"nodeType":"294","messageId":"295","endLine":1008,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":1012,"column":27,"nodeType":"294","messageId":"295","endLine":1012,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":1016,"column":27,"nodeType":"294","messageId":"295","endLine":1016,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":1020,"column":27,"nodeType":"294","messageId":"295","endLine":1020,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":1049,"column":27,"nodeType":"294","messageId":"295","endLine":1049,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":1053,"column":27,"nodeType":"294","messageId":"295","endLine":1053,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":1055,"column":23,"nodeType":"294","messageId":"295","endLine":1055,"endColumn":25},{"ruleId":"292","severity":1,"message":"293","line":1060,"column":27,"nodeType":"294","messageId":"295","endLine":1060,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":1062,"column":23,"nodeType":"294","messageId":"295","endLine":1062,"endColumn":25},{"ruleId":"292","severity":1,"message":"293","line":1067,"column":27,"nodeType":"294","messageId":"295","endLine":1067,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":1069,"column":23,"nodeType":"294","messageId":"295","endLine":1069,"endColumn":25},{"ruleId":"292","severity":1,"message":"293","line":1074,"column":27,"nodeType":"294","messageId":"295","endLine":1074,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":1076,"column":23,"nodeType":"294","messageId":"295","endLine":1076,"endColumn":25},{"ruleId":"268","severity":1,"message":"300","line":1100,"column":13,"nodeType":"270","messageId":"271","endLine":1100,"endColumn":24},{"ruleId":"268","severity":1,"message":"301","line":1100,"column":26,"nodeType":"270","messageId":"271","endLine":1100,"endColumn":37},{"ruleId":"268","severity":1,"message":"302","line":1100,"column":39,"nodeType":"270","messageId":"271","endLine":1100,"endColumn":50},{"ruleId":"268","severity":1,"message":"303","line":1101,"column":13,"nodeType":"270","messageId":"271","endLine":1101,"endColumn":24},{"ruleId":"268","severity":1,"message":"304","line":1101,"column":26,"nodeType":"270","messageId":"271","endLine":1101,"endColumn":37},{"ruleId":"268","severity":1,"message":"305","line":1101,"column":39,"nodeType":"270","messageId":"271","endLine":1101,"endColumn":50},{"ruleId":"268","severity":1,"message":"306","line":1102,"column":13,"nodeType":"270","messageId":"271","endLine":1102,"endColumn":24},{"ruleId":"268","severity":1,"message":"307","line":1102,"column":26,"nodeType":"270","messageId":"271","endLine":1102,"endColumn":37},{"ruleId":"268","severity":1,"message":"308","line":1102,"column":39,"nodeType":"270","messageId":"271","endLine":1102,"endColumn":50},{"ruleId":"268","severity":1,"message":"309","line":1103,"column":13,"nodeType":"270","messageId":"271","endLine":1103,"endColumn":24},{"ruleId":"268","severity":1,"message":"310","line":1103,"column":26,"nodeType":"270","messageId":"271","endLine":1103,"endColumn":37},{"ruleId":"268","severity":1,"message":"311","line":1103,"column":39,"nodeType":"270","messageId":"271","endLine":1103,"endColumn":50},{"ruleId":"268","severity":1,"message":"312","line":1105,"column":13,"nodeType":"270","messageId":"271","endLine":1105,"endColumn":23},{"ruleId":"268","severity":1,"message":"313","line":1105,"column":25,"nodeType":"270","messageId":"271","endLine":1105,"endColumn":35},{"ruleId":"268","severity":1,"message":"314","line":1105,"column":37,"nodeType":"270","messageId":"271","endLine":1105,"endColumn":47},{"ruleId":"268","severity":1,"message":"315","line":1105,"column":49,"nodeType":"270","messageId":"271","endLine":1105,"endColumn":59},{"ruleId":"268","severity":1,"message":"316","line":1106,"column":13,"nodeType":"270","messageId":"271","endLine":1106,"endColumn":23},{"ruleId":"268","severity":1,"message":"317","line":1106,"column":25,"nodeType":"270","messageId":"271","endLine":1106,"endColumn":35},{"ruleId":"268","severity":1,"message":"318","line":1106,"column":37,"nodeType":"270","messageId":"271","endLine":1106,"endColumn":47},{"ruleId":"268","severity":1,"message":"319","line":1106,"column":49,"nodeType":"270","messageId":"271","endLine":1106,"endColumn":59},{"ruleId":"268","severity":1,"message":"320","line":1107,"column":13,"nodeType":"270","messageId":"271","endLine":1107,"endColumn":23},{"ruleId":"268","severity":1,"message":"321","line":1107,"column":25,"nodeType":"270","messageId":"271","endLine":1107,"endColumn":35},{"ruleId":"268","severity":1,"message":"322","line":1107,"column":37,"nodeType":"270","messageId":"271","endLine":1107,"endColumn":47},{"ruleId":"268","severity":1,"message":"323","line":1107,"column":49,"nodeType":"270","messageId":"271","endLine":1107,"endColumn":59},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'categ' is assigned a value but never used.","Identifier","unusedVar","'ym' is assigned a value but never used.","'pm' is assigned a value but never used.","'tp' is assigned a value but never used.","'ElementFormFloor' is defined but never used.",["324"],["325"],"no-redeclare","'i' is already defined.","redeclared","'Lnsum' is already defined.","'Lnsum2' is already defined.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'rmass13' is already defined.","'rmass12' is already defined.","'rmass23' is already defined.","'k12' is already defined.","'floor' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'side_x_part' is assigned a value but never used.","'parts' is assigned a value but never used.","'side_root' is assigned a value but never used.","'junction_x' is assigned a value but never used.","'side_a_psup' is assigned a value but never used.","'side_a_pinf' is assigned a value but never used.","'side_a_padc' is assigned a value but never used.","'side_b_psup' is assigned a value but never used.","'side_b_pinf' is assigned a value but never used.","'side_b_padc' is assigned a value but never used.","'side_c_psup' is assigned a value but never used.","'side_c_pinf' is assigned a value but never used.","'side_c_padc' is assigned a value but never used.","'side_d_psup' is assigned a value but never used.","'side_d_pinf' is assigned a value but never used.","'side_d_padc' is assigned a value but never used.","'junction_a' is assigned a value but never used.","'junction_b' is assigned a value but never used.","'junction_c' is assigned a value but never used.","'junction_d' is assigned a value but never used.","'junction_1' is assigned a value but never used.","'junction_2' is assigned a value but never used.","'junction_3' is assigned a value but never used.","'junction_4' is assigned a value but never used.","'junction_5' is assigned a value but never used.","'junction_6' is assigned a value but never used.","'junction_7' is assigned a value but never used.","'junction_8' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]